---
format:
  html:
    theme: cosmo
  pdf:
    documentclass: scrbook
    linestretch: "1.5"
---

# Gender Egalitarianism and Women's Descriptive Representation

In the traditional view, politics is a man's game.
From this perspective, the public sphere, both politics and the workplace, is unsuited to the participation of women, and elected office is considered to be a position for men only.
Nonetheless, around the world in rich democratic countries of the OECD, women have succeeded in winning election to seats in the national legislature.
Such successes were once rare.
In ten of these rich democracies, no more than one in twenty members of the lower house of the national legislature were women into the 1980s or even later.
And success in gaining office remains uneven.
At this writing, gender parity---equal numbers of men and women---has been achieved in the lower legislative houses of only two of these countries, Mexico and New Zealand.
But women continue to number fewer than one in five legislators in twice as many of these rich democratic countries.

```{r setup, include=FALSE}
options(tinytex.verbose = TRUE)

knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  dpi = 300,
  fig.width=7
)

if (!require(pacman))
  install.packages("pacman")
library(pacman)

p_install(janitor, force = FALSE)

p_load(
  # analysis
  brms,
  
  # presentation
  gridExtra,
  modelsummary,
  dotwhisker,
  ggthemes,
  latex2exp,
  RColorBrewer,
  colorRamps,
  directlabels,
  patchwork,
  
  # data wrangling
  broom,
  countrycode,
  DCPOtools,
  glue,
  here,
  janitor,
  readxl,
  tidyverse,
  wbstats)

interplot2 <- function (m, var1, var2, plot = TRUE, steps = NULL, ci = 0.95, 
                        adjCI = FALSE, hist = FALSE, var2_dt = NA, predPro = FALSE, 
                        var2_vals = NULL, point = FALSE, sims = 5000, xmin = NA, 
                        xmax = NA, ercolor = NA, esize = 0.5, ralpha = 0.5, rfill = "grey70", 
                        stats_cp = "none", txt_caption = NULL, facet_labs = NULL, 
                        ...) {
  m.class <- class(m)
  if (m.class == "list") {
    m.sims <- m %>% 
      map_df(~ arm::sim(.x, sims/100) %>% 
               pluck("fixef") %>% 
               as_tibble())
    m <- m[[1]]
  } else m.sims <- arm::sim(m, sims) %>% 
      pluck("fixef") %>% 
      as_tibble()
  factor_v1 <- factor_v2 <- FALSE
  if (is.factor(eval(parse(text = paste0("m@frame$", var1)))) & 
      is.factor(eval(parse(text = paste0("m@frame$", var2))))) 
    stop("The function does not support interactions between two factors.")
  if (is.factor(eval(parse(text = paste0("m@frame$", var1))))) {
    var1_bk <- var1
    var1 <- paste0(var1, levels(eval(parse(text = paste0("m@frame$", 
                                                         var1)))))
    factor_v1 <- TRUE
    ifelse(var1 == var2, var12 <- paste0("I(", var1, "^2)"), 
           var12 <- paste0(var2, ":", var1)[-1])
    for (i in seq(var12)) {
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        var12[i] <- paste0(var1, ":", var2)[-1][i]
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        stop(paste("Model does not include the interaction of", 
                   var1, "and", var2, "."))
    }
  } else if (is.factor(eval(parse(text = paste0("m@frame$", 
                                                var2))))) {
    var2_bk <- var2
    var2 <- paste0(var2, levels(eval(parse(text = paste0("m@frame$", 
                                                         var2)))))
    factor_v2 <- TRUE
    ifelse(var1 == var2, var12 <- paste0("I(", var1, "^2)"), 
           var12 <- paste0(var2, ":", var1)[-1])
    for (i in seq(var12)) {
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        var12[i] <- paste0(var1, ":", var2)[-1][i]
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        stop(paste("Model does not include the interaction of", 
                   var1, "and", var2, "."))
    }
  } else {
    ifelse(var1 == var2, var12 <- paste0("I(", var1, "^2)"), 
           var12 <- paste0(var2, ":", var1))
    for (i in seq(var12)) {
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        var12[i] <- paste0(var1, ":", var2)[i]
      if (!var12[i] %in% unlist(dimnames(m@pp$X)[2])) 
        stop(paste("Model does not include the interaction of", 
                   var1, "and", var2, "."))
    }
  }
  if (factor_v2) {
    xmin <- 0
    xmax <- 1
    steps <- 2
  } else {
    if (is.na(xmin)) 
      xmin <- min(m@frame[var2], na.rm = T)
    if (is.na(xmax)) 
      xmax <- max(m@frame[var2], na.rm = T)
    if (is.null(steps)) {
      steps <- eval(parse(text = paste0("length(unique(na.omit(m@frame$", 
                                        var2, ")))")))
    }
    if (steps > 100) 
      steps <- 100
  }
  coef <- data.frame(fake = seq(xmin, xmax, length.out = steps), 
                     coef1 = NA, ub = NA, lb = NA)
  coef_df <- data.frame(fake = numeric(0), coef1 = numeric(0), 
                        ub = numeric(0), lb = numeric(0), model = character(0))
  if (factor_v1) {
    if (predPro == TRUE) 
      stop("The current version does not support estimating predicted probabilities for factor base terms.")
    for (j in 1:(length(levels(eval(parse(text = paste0("m@frame$", 
                                                        var1_bk))))) - 1)) {
      for (i in 1:steps) {
        coef$coef1[i] <- mean(first(m.sims[, match(var1[j + 
                                                          1], unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                      m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]))
        coef$ub[i] <- quantile(first(m.sims[, match(var1[j + 
                                                           1], unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                       m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]), 
                               (1 - ci)/2)
        coef$lb[i] <- quantile(first(m.sims[, match(var1[j + 
                                                           1], unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                       m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]), 
                               1 - (1 - ci)/2)
      }
      if (plot == TRUE) {
        coef$value <- var1[j + 1]
        coef_df <- rbind(coef_df, coef)
        if (hist == TRUE) {
          if (is.na(var2_dt)) {
            var2_dt <- eval(parse(text = paste0("m@frame$", 
                                                var2)))
          }
          else {
            var2_dt <- var2_dt
          }
        }
      }
      else {
        names(coef) <- c(var2, "coef", "ub", "lb")
        return(coef)
      }
    }
    if (is.null(facet_labs)) 
      facet_labs <- unique(coef_df$value)
    coef_df$value <- factor(coef_df$value, labels = facet_labs)
    interplot:::interplot.plot(m = coef_df, hist = hist, steps = steps, 
                               var2_dt = var2_dt, point = point, ercolor = ercolor, 
                               esize = esize, ralpha = ralpha, rfill = rfill, stats_cp = "none", 
                               txt_caption = NULL, ...) + facet_grid(. ~ value)
  } else if (factor_v2) {
    if (predPro == TRUE) 
      stop("The current version does not support estimating predicted probabilities for factor base terms.")
    for (j in 1:(length(levels(eval(parse(text = paste0("m@frame$", 
                                                        var2_bk))))) - 1)) {
      for (i in 1:steps) {
        coef$coef1[i] <- mean(first(m.sims[, match(var1, 
                                                   unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                      m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]))
        coef$ub[i] <- quantile(first(m.sims[, match(var1, 
                                                    unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                       m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]), 
                               (1 - ci)/2)
        coef$lb[i] <- quantile(first(m.sims[, match(var1, 
                                                    unlist(dimnames(m@pp$X)[2]))] + coef$fake[i] * 
                                       m.sims[, match(var12[j], unlist(dimnames(m@pp$X)[2]))]), 
                               1 - (1 - ci)/2)
      }
      if (plot == TRUE) {
        coef$value <- var2[j + 1]
        coef_df <- rbind(coef_df, coef)
        if (hist == TRUE) {
          if (is.na(var2_dt)) {
            var2_dt <- eval(parse(text = paste0("m@frame$", 
                                                var2)))
          }
          else {
            var2_dt <- var2_dt
          }
        }
      }
      else {
        names(coef) <- c(var2, "coef", "ub", "lb")
        return(coef)
      }
    }
    if (is.null(facet_labs)) 
      facet_labs <- unique(coef_df$value)
    coef_df$value <- factor(coef_df$value, labels = facet_labs)
    interplot:::interplot.plot(m = coef_df, steps = steps, hist = hist, 
                               var2_dt = var2_dt, point = point, ercolor = ercolor, 
                               esize = esize, ralpha = ralpha, rfill = rfill, stats_cp = "none", 
                               txt_caption = NULL, ...) + facet_grid(. ~ value)
  } else {
    if (predPro == TRUE) {
      if (is.null(var2_vals)) 
        stop("The predicted probabilities cannot be estimated without defining 'var2_vals'.")
      df <- data.frame(m$model)
      df[[names(m@flist)]] <- NULL
      if (sum(grep("X.weights.", names(df))) != 0) 
        df <- select(df, -X.weights.)
      df_temp <- select(df, 1)
      df <- df[-1] %>% map(function(var) {
        if (is.factor(var)) {
          model.matrix(~var - 1)[, -1] %>% as.data.frame()
        }
        else {
          as.numeric(var)
        }
      })
      for (i in seq(df)) {
        if (!is.data.frame(df[[i]])) {
          namesUpdate <- c(names(df_temp), names(df)[[i]])
          df_temp <- cbind(df_temp, df[[i]])
          names(df_temp) <- namesUpdate
        }
        else {
          df_temp <- cbind(df_temp, df[[i]])
        }
      }
      df <- df_temp
      names(df)[1] <- "(Intercept)"
      df$`(Intercept)` <- 1
      if (var1 == var2) {
        names(df) <- sub("I\\.(.*)\\.2\\.", "I\\(\\1\\^2\\)", 
                         names(df))
      }
      iv_medians <- summarize_all(df, funs(median(., na.rm = TRUE)))
      fake_data <- iv_medians[rep(1:nrow(iv_medians), 
                                  each = steps * length(var2_vals)), ]
      fake_data[[var1]] <- with(df, rep(seq(min(get(var1)), 
                                            max(get(var1)), length.out = steps), steps = length(var2_vals)))
      fake_data[[var2]] <- rep(var2_vals, each = steps)
      fake_data[[var12]] <- fake_data[[var1]] * fake_data[[var2]]
      pp <- rowMeans(plogis(data.matrix(fake_data) %*% 
                              t(data.matrix(m.sims))))
      row_quantiles <- function(x, probs) {
        naValue <- NA
        storage.mode(naValue) <- storage.mode(x)
        nrow <- nrow(x)
        q <- matrix(naValue, nrow = nrow, ncol = length(probs))
        if (nrow > 0L) {
          t <- quantile(x[1L, ], probs = probs)
          colnames(q) <- names(t)
          q[1L, ] <- t
          if (nrow >= 2L) {
            for (rr in 2:nrow) {
              q[rr, ] <- quantile(x[rr, ], probs = probs)
            }
          }
        }
        else {
          t <- quantile(0, probs = probs)
          colnames(q) <- names(t)
        }
        q <- drop(q)
        q
      }
      pp_bounds <- row_quantiles(plogis(data.matrix(fake_data) %*% 
                                          t(data.matrix(m.sims))), prob = c((1 - 
                                                                               ci)/2, 1 - (1 - ci)/2))
      pp <- cbind(pp, pp_bounds)
      pp <- pp * 100
      colnames(pp) <- c("coef1", "lb", "ub")
      pp <- cbind(fake_data[, c(var1, var2)], pp)
      pp[, var2] <- as.factor(pp[, var2])
      names(pp)[1] <- "fake"
      names(pp)[2] <- "value"
      coef <- pp
    } else {
      multiplier <- ifelse(var1 == var2, 2, 1) 
      
      for (i in 1:steps) {
        coef$coef1[i] <- mean(first(m.sims[, match(var1, 
                                                   unlist(dimnames(m@pp$X)[2]))] + {multiplier * 
                                                       coef$fake[i] * m.sims[, match(var12, 
                                                                                     unlist(dimnames(m@pp$X)[2]))]}))
        coef$ub[i] <- quantile(first(m.sims[, match(var1, 
                                                    unlist(dimnames(m@pp$X)[2]))] + multiplier * 
                                       coef$fake[i] * m.sims[, match(var12, 
                                                                     unlist(dimnames(m@pp$X)[2]))]), (1 - ci)/2)
        coef$lb[i] <- quantile(first(m.sims[, match(var1, 
                                                    unlist(dimnames(m@pp$X)[2]))] + multiplier * 
                                       coef$fake[i] * m.sims[, match(var12, 
                                                                     unlist(dimnames(m@pp$X)[2]))]), 1 - (1 - ci)/2)
      }
    }
    multiplier <- ifelse(var1 == var2, 2, 1) 
    min_sim <- m.sims[, match(var1, unlist(dimnames(m@pp$X)[2]))] + 
      multiplier * xmin * m.sims[, match(var12, 
                                         unlist(dimnames(m@pp$X)[2]))]
    max_sim <- m.sims[, match(var1, unlist(dimnames(m@pp$X)[2]))] + 
      multiplier * xmax * m.sims[, match(var12, 
                                         unlist(dimnames(m@pp$X)[2]))]
    diff <- first(max_sim - min_sim)
    ci_diff <- c(quantile(diff, (1 - ci)/2), quantile(diff, 
                                                      1 - (1 - ci)/2))
    if (plot == TRUE) {
      if (hist == TRUE) {
        if (is.na(var2_dt)) {
          var2_dt <- eval(parse(text = paste0("m@frame$", 
                                              var2)))
        }
        else {
          var2_dt <- var2_dt
        }
      }
      interplot:::interplot.plot(m = coef, steps = steps, hist = hist, 
                                 predPro = predPro, var2_vals = var2_vals, var2_dt = var2_dt, 
                                 point = point, ercolor = ercolor, esize = esize, 
                                 ralpha = ralpha, rfill = rfill, stats_cp = "none", 
                                 txt_caption = NULL, ...)
    } else {
      if (predPro == TRUE) {
        names(coef) <- c(var2, paste0("values_in_", 
                                      var1), "coef", "ub", "lb")
      }
      else {
        names(coef) <- c(var2, "coef", "ub", "lb")
      }
      return(coef)
    }
  }
}

interplot_b <- function (m, var1, var2, plot = TRUE, steps = NULL, ci = 0.95, 
                         adjCI = FALSE, hist = FALSE, var2_dt = NA, predPro = FALSE, 
                         var2_vals = NULL, point = FALSE, sims = 5000, xmin = NA, 
                         xmax = NA, ercolor = NA, esize = 0.5, ralpha = 0.5, rfill = "grey70", 
                         stats_cp = "none", txt_caption = NULL, facet_labs = NULL, 
                         ...) {
  
  m.sims <- brms::as_draws_df(m) %>% 
    as_tibble()
  
  if (is.na(xmin)) 
    xmin <- min(m$data[var2], na.rm = TRUE)
  if (is.na(xmax)) 
    xmax <- max(m$data[var2], na.rm = TRUE)
  if (is.null(steps)) {
    steps <- eval(parse(text = paste0("length(unique(na.omit(m$data$", 
                                      var2, ")))")))
  }
  if (steps > 100) 
    steps <- 100
  
  coef <- data.frame(fake = seq(xmin, xmax, length.out = steps), 
                     coef1 = NA, ub = NA, lb = NA)
  coef_df <- data.frame(fake = numeric(0), coef1 = numeric(0), 
                        ub = numeric(0), lb = numeric(0), model = character(0))
  
  var1a <- str_subset(names(m.sims), var1)[1]
  var2a <- str_subset(names(m.sims), var2)[1]
  ifelse(var1 == var2, var12 <- paste0("I(", var1, "^2)"), 
         var12 <- paste0(var2a, ":", var1))
  if (!var12 %in% names(m.sims))
    var12 <- paste0(var1a, ":", var2)
  if (!var12 %in% names(m.sims)) 
    stop(paste("Model does not include the interaction of", 
               var1, "and", var2, "."))
  
  multiplier <- ifelse(var1 == var2, 2, 1) 
  
  for (i in 1:steps) {
    coef$coef1[i] <- mean({m.sims[, var1a] + {multiplier * 
        coef$fake[i] * m.sims[, var12]}}[, 1])
    coef$lb[i] <- quantile({m.sims[, var1a] + {multiplier * 
        coef$fake[i] * m.sims[, var12]}}[, 1], (1 - ci)/2)
    coef$ub[i] <- quantile({m.sims[, var1a] + {multiplier * 
        coef$fake[i] * m.sims[, var12]}}[, 1], 1 - (1 - ci)/2)
  }
  
  min_sim <- {m.sims[, var1a] + {multiplier * 
      xmin * m.sims[, var12]}}[, 1]
  max_sim <- {m.sims[, var1a] + {multiplier * 
      xmax * m.sims[, var12]}}[, 1]
  diff <- first(max_sim - min_sim)
  ci_diff <- c(quantile(diff, (1 - ci)/2), quantile(diff, 
                                                    1 - (1 - ci)/2))
  if (plot == TRUE) {
    interplot:::interplot.plot(m = coef, steps = steps, hist = hist, 
                               predPro = predPro, var2_vals = var2_vals, var2_dt = var2_dt, 
                               point = point, ercolor = ercolor, esize = esize, 
                               ralpha = ralpha, rfill = rfill, stats_cp = "none", 
                               txt_caption = NULL, ...)
  } else {
    names(coef) <- c(var2, "coef", "ub", "lb")
    return(coef)
  }
}

make_dummies <- function(df, col) {
  vals <- discard(unique(df[[col]]), is.na)
  dummies <- map(vals, function(val) {
    df %>% 
      transmute({{val}} := as.numeric(.data[[col]] == val))
  }) %>% 
    list_cbind()
  
  bind_cols(df, dummies)
}

get_coef <- function(iv, results_df = coef_data, type = "both", width = .8) {
  result_var <- results_df %>% 
    filter(.width == width) %>% 
    pull(.variable) %>% 
    str_subset(iv)
  
  if (!type=="both") {
    res <- results_df %>% 
      filter(.variable == result_var & .width == width) %>% 
      pull({{type}})
  } else {
    sc <- results_df %>% 
      filter(.variable == result_var & .width == width) %>% 
      pull(std_coef)
    
    ci <- results_df %>% 
      filter(.variable == result_var & .width == width) %>% 
      pull(ci)
    
    wdth <- enexpr(width) * 100
    
    res <- paste0(sc, " (", wdth, "% c.i.: ", ci, ")")
  }
  
  return(res)
}

by2sd <- function(var) {
  dich <- stats::na.omit(unique(var)) %>% 
    sort() %>% identical(c(0, 1))
  if (dich) 
    sd <- 1
  else 
    sd <- 2 * stats::sd(var, na.rm = TRUE)
  
  return(sd)
}

set.seed(324)
descrep_path <- here("paper", "descriptive_representation")

oecd_countries <- c("Australia", "Austria", "Belgium",
                    "Canada", "Chile", "Colombia",
                    "Costa Rica", "Czechia", "Denmark",
                    "Estonia", "Finland", "France", 
                    "Germany", "Greece", "Hungary",
                    "Iceland", "Ireland", "Israel",
                    "Italy", "Japan", "South Korea",
                    "Latvia", "Lithuania", "Luxembourg",
                    "Mexico", "Netherlands", "New Zealand",
                    "Norway", "Poland", "Portugal", 
                    "Slovakia", "Slovenia", "Spain",
                    "Sweden", "Switzerland", "Turkey", 
                    "United Kingdom", "United States")
```

```{r load_party_data, eval=FALSE}
# Party-level
# Manifesto Project: parties and election results
if (!file.exists(file.path(descrep_path,
                           "data-raw",
                           "manifesto_project",
                           "mpds2021a.csv"))) {
  download.file("https://manifesto-project.wzb.eu/down/data/2021a/datasets/MPDataset_MPDS2021a.csv",
                file.path(descrep_path, "data-raw", "manifesto_project", "mpds2021a.csv"))
}

mp_parties <- read_csv(file.path(descrep_path,
                                 "data-raw",
                                 "manifesto_project",
                                 "mpds2021a.csv"),
                       show_col_types = FALSE) %>%
  mutate(year = round(as.numeric(date)/100)) %>% 
  select(country, countryname, eumember, 
         date, year,
         party, partyname, partyabbrev, parfam,
         pervote, absseat, totseats,
         rile) %>% 
  arrange(party, -date) %>% 
  distinct(party, year, .keep_all = TRUE) %>% #use later of 2 elections in year
  arrange(party, date)

# Original data on Colombia and Costa Rica (not included in MP)
latam <- read_csv(file.path(descrep_path,
                            "data-raw",
                            "latam.csv"),
                  col_types = "cddcddcddd")

# Continuity: fixes to MP parties
party_continuity <- read_csv(file.path(descrep_path,
                                       "data-raw",
                                       "party_continuity.csv"),
                             show_col_types = FALSE) %>% 
  select(-partyname)

# Weeks, Meguid, Kittilson, and Coffé 2022 (from Dataverse): 
# women elected and female leadership
weeks <- rio::import(file.path(descrep_path,
                               "data-raw",
                               "WeeksMeguidKittilsonCoffe2022",
                               "Replication_data.RData")) %>%
  mutate(year = round(as.numeric(date)/100)) %>% 
  select(weurope, party, 
         date,
         pfem_c = pfem_new2, femaleleader_c = femaleleader2_lag,
         cabinet_party_c = cabinet_party2_lag) %>% 
  distinct() %>% 
  mutate(source = "https://doi.org/10.1017/S0003055422000107")

# Adams, Bracken, Gidron, Horne, and O’BrienSenk 2022 (from Dataverse):
# women elected and female leadership

previous_election <- mp_parties %>% 
  group_by(party) %>% 
  mutate(date = date,
         date_lag = lag(date),
         year_lag = round(as.numeric(date_lag)/100)) %>% 
  distinct(party, year, .keep_all = TRUE ) %>% 
  select(party, date, year, date_lag, year_lag)

adams0 <- rio::import(file.path(descrep_path,
                                "data-raw",
                                "AdamsBrackenGidronHorneOBrienSenk2022",
                                "dyadic_data_1-4-22.Rdata")) %>%
  filter(!is.na(to_pfeml)) %>%
  transmute(countryname = countrycode::countrycode(country,
                                                   "country.name",
                                                   "country.name"),
            year = year,
            party = to_mp_number,
            pfem_b = to_pfeml*100,
            femaleleader_b = to_femaleleader,
            cabinet_party_b = to_in_gov) %>%
  arrange(countryname, year, party) %>% 
  distinct() %>% 
  left_join(previous_election,
            by = c("party", "year")) 

adams <- anti_join(adams0, adams0 %>% filter(year == year_lag),
                   by = names(adams0)) %>% 
  select(date = date_lag, party, pfem_b, femaleleader_b, cabinet_party_b) %>% 
  mutate(source = "https://doi.org/10.1017/S0003055422000491")

rm(adams0)

# Australia: women elected and female leadership
australia <- rvest::session("https://en.wikipedia.org/wiki/Women_in_the_Australian_House_of_Representatives") %>% 
  rvest::html_table() %>% 
  nth(3) %>% 
  janitor::clean_names() %>% 
  mutate(year = str_extract(election, "\\d{4}") %>% 
           as.numeric()) %>% 
  select(year, labor_3, liberal_3, national_3) %>% 
  filter(year > 1970 & !is.na(year)) %>% 
  rename_with(., ~c("Australian Labor Party",
                    "Liberal Party of Australia",
                    "National Party of Australia"), names(.)[2:4]) %>% 
  pivot_longer(cols = !year, 
               names_to = "partyname",
               values_to = "pfem0") %>% 
  mutate(pfem_a = str_extract(pfem0, "\\d{1,2}\\.?\\d?") %>% 
           as.numeric()) %>% 
  filter(!is.na(year) & !is.na(pfem_a)) %>% 
  select(-pfem0) %>% 
  left_join(tibble(party = c(63320,
                             63620,
                             63810), 
                   partyname = c("Australian Labor Party",
                                 "Liberal Party of Australia",
                                 "National Party of Australia")),
            by = "partyname") %>% 
  mutate(femaleleader_a = case_when(party == 63320 ~ as.numeric(year==2010),
                                    party == 63620 ~ 0,
                                    party == 63810 ~ 0)) %>% 
  bind_rows(tibble(party = 63110,
                   partyname = "Australian Greens",
                   year = c(2004, 2007, 2010, 2013, 2016, 2019, 2022),
                   pfem_a = c(NA, NA, 0, 0, 0, 0, 25),
                   femaleleader_a = c(0, 0, 0, 1, 0, 0, 0))) %>% 
  bind_rows(tibble(party = 63710,
                   partyname = "Katter's Australian Party",
                   year = c(2010, 2013, 2016, 2019, 2022),
                   pfem_a = c(NA, 0, 0, 0, 0),
                   femaleleader_a = c(0, 0, 0, 0, 0))) %>% 
  bind_rows(tibble(party = 63410,
                   partyname = "Palmer United Party",
                   year = c(2013),
                   pfem_a = c(0),
                   femaleleader_a = c(0))) %>% 
  bind_rows(tibble(party = 63621,
                   partyname = "Liberal National Party of Queensland",
                   year = c(2010, 2013, 2016),
                   pfem_a = c(0, 0, 0),
                   femaleleader_a = c(0, 0, 0))) %>% 
  bind_rows(tibble(party = 63901,
                   partyname = "Nick Xenophon Team",
                   year = c(2016, 2019, 2022),
                   pfem_a = c(100, 100, 100),
                   femaleleader_a = c(0, 0, 0))) %>%
  mutate(countryname = "Australia",
         source = "https://en.wikipedia.org/wiki/Women_in_the_Australian_House_of_Representatives", 
         absseat_a = case_when(year == 2019 &
                                 party == 63110 ~ 1,
                               year == 2019 &
                                 party == 63710 ~ 1,
                               year == 2019 &
                                 party == 63901 ~ 1,
                               year == 2019 &
                                 party == 63320 ~ 68,
                               year == 2019 &
                                 party == 63620 ~ 44,
                               year == 2019 &
                                 party == 63810 ~ 10),
         totseats_a = case_when(year >= 2019 ~ 151,
                                between(year, 1999, 2018) ~ 150,
                                between(year, 1996, 1998) ~ 148,
                                year == 1993 ~ 147,
                                between(year, 1984, 1990) ~ 148,
                                between(year, 1980, 1983) ~ 125,
                                year == 1977 ~ 124,
                                between(year, 1972, 1975) ~ 127))



# Germany: women elected and female leadership
germany <- rvest::session("https://de.wikipedia.org/wiki/Frauenanteil_im_Deutschen_Bundestag_seit_1949") %>% 
  rvest::html_table() %>% 
  nth(2) %>% 
  janitor::clean_names() %>% 
  mutate(year = str_extract(wahlperiode, "\\d{4}") %>% 
           as.numeric()) %>% 
  select(-wahlperiode, -contains("_2")) %>% 
  rename_with(., ~c("Christian Democratic Union/Christian Social Union",
                    "Free Democratic Party",
                    "Social Democratic Party of Germany",
                    "Alliance‘90/Greens", "The Left",
                    "Alternative for Germany"), names(.)[1:6]) %>% 
  pivot_longer(cols = !year, 
               names_to = "partyname",
               values_to = "pfem0") %>% 
  mutate(pfem_a = str_extract(pfem0, "\\d{1,2},?\\d?") %>% 
           str_replace(",", ".") %>% 
           as.numeric()) %>% 
  filter(!is.na(year) & !is.na(pfem_a)) %>% 
  select(-pfem0) %>% 
  left_join(tibble(party = c(41521, 
                             41420, 
                             41320,
                             41113, 41223,
                             41953), 
                   partyname = c("Christian Democratic Union/Christian Social Union",
                                 "Free Democratic Party",
                                 "Social Democratic Party of Germany",
                                 "Alliance‘90/Greens", "The Left",
                                 "Alternative for Germany")),
            by = "partyname") %>% 
  mutate(femaleleader_a = case_when(party == 41521 ~ as.numeric(between(year, 2005, 2017)),
                                    party == 41420 ~ 0,
                                    party == 41320 ~ 0,
                                    party == 41113 ~ as.numeric(year!=1990),
                                    party == 41223 ~ as.numeric(year==2021),
                                    party == 41953 ~ as.numeric(year!=2013)),
         countryname = "Germany",
         source = "https://de.wikipedia.org/wiki/Frauenanteil_im_Deutschen_Bundestag_seit_1949")

# United States: women elected and female leadership
united_states <- rvest::session("https://en.wikipedia.org/wiki/Women_in_the_United_States_House_of_Representatives") %>% 
  rvest::html_table() %>% 
  nth(5) %>% 
  janitor::clean_names() %>% 
  mutate(year = str_extract(years, "\\d{4}") %>% 
           as.numeric() - 1) %>% 
  select(year,
         `Republican Party` = percent_of_party,
         `Democratic Party` = percent_of_party_2) %>% 
  pivot_longer(cols = !year, 
               names_to = "partyname",
               values_to = "pfem0") %>% 
  mutate(pfem_a = str_extract(pfem0, "\\d{1,2}\\.?\\d?") %>% 
           as.numeric()) %>% 
  select(-pfem0) %>% 
  left_join(tibble(party = c(61320, 
                             61620), 
                   partyname = c("Democratic Party",
                                 "Republican Party")),
            by = "partyname") %>% 
  mutate(femaleleader_a = case_when(party == 61320 ~ as.numeric(year==2016),
                                    party == 61620 ~ 0),
         countryname = "United States",
         source = "https://en.wikipedia.org/wiki/Women_in_the_United_States_House_of_Representatives") %>% 
  inner_join(rvest::session("https://history.house.gov/Institution/Party-Divisions/Party-Divisions/") %>% 
               rvest::html_table() %>% 
               first() %>% 
               janitor::clean_names() %>% 
               transmute(year = str_extract(congress_years, "\\d{4}") %>% 
                           as.numeric() - 1,
                         `Democratic Party` = as.numeric(pro_administration),
                         `Republican Party` = as.numeric(anti_administration)) %>% 
               filter(year > 1970) %>% 
               pivot_longer(cols = !year,
                            names_to = "partyname",
                            values_to = "absseat_a") %>% 
               mutate(totseats_a = 435),
             by = c("year", "partyname"))

# Original updates to women elected and female leadership
updates <- read_csv(file.path(descrep_path,
                              "data-raw",
                              "pfem_updates.csv"),
                    col_types = "cdddcdcdd")

# Country-level
# Parline: updated country-level women legislators

if (!file.exists(file.path(descrep_path, "data-raw", "parline.rda"))) {
  clean_old_parline <- function(yyyy) {
    rvest::session(paste0("http://archive.ipu.org/wmn-e/arc/classif0101", 
                          yyyy - 1999,
                          ".htm")) %>% 
      rvest::html_table() %>% 
      nth(3) %>% 
      row_to_names(3) %>% 
      clean_names() %>% 
      transmute(country = countrycode(country, "country.name", "country.name"),
                year = yyyy,
                women_rep = percent_w %>% 
                  str_remove("%") %>% 
                  as.numeric())
  }
  
  clean_new_parline <- function(yyyy) {
    download.file(paste0("https://data.ipu.org/api/women-ranking.csv?load-entity-refs=taxonomy_term%2Cfield_collection_item&max-depth=2&langcode=en&month=1&year=", 
                         yyyy + 1),
                  file.path(descrep_path,
                            "data-raw",
                            paste0("parline", yyyy, ".csv")))
    
    read_csv(file.path(descrep_path,
                       "data-raw",
                       paste0("parline", yyyy, ".csv")),
             skip = 5) %>%
      clean_names() %>% 
      transmute(country = countrycode(x2, "country.name", "country.name"),
                year = yyyy,
                women_rep = percent_w_6 %>% 
                  str_remove("%") %>% 
                  as.numeric())
  }
  
  parline <- map(2016:2018, clean_old_parline) %>% 
    list_rbind() %>% 
    bind_rows(map(2019:2022, clean_new_parline) %>% 
                list_rbind()) %>% 
    arrange(country, year) %>% 
    mutate(women_rep = ifelse(is.na(women_rep),
                              lead(women_rep),
                              women_rep))
  save(parline, file = file.path(descrep_path, "data-raw", "parline.rda"))
} else {
  load(file.path(descrep_path, "data-raw", "parline.rda"))
}

# QAROT: national quotas and women's representation (plus Parline updates)
qarot <- read_csv(file.path(descrep_path,
                            "data-raw", 
                            "qarot",
                            "QAROTdata_HughesPaxtonClaytonZetterberg_CountryYear_V1_August2017.csv"),
                  show_col_types = FALSE) %>%  # http://doi.org/10.3886/E100918V1
  mutate(countryname = countrycode::countrycode(country,
                                                origin = "country.name",
                                                destination = "country.name")) %>% 
  janitor::clean_names() %>% 
  select(countryname, year, defacto_threshold, women_rep) %>% 
  mutate(defacto_threshold = if_else(is.na(defacto_threshold), 0, defacto_threshold)) %>% 
  group_by(countryname) %>% 
  group_modify(~ add_row(.x,
                         year = 2016:2023)) %>% 
  fill(defacto_threshold) %>% 
  mutate(defacto_threshold = case_when(countryname == "Colombia" &
                                         defacto_threshold == 30 ~ 37,
                                       countryname == "France" &
                                         defacto_threshold == 50 ~ 48,
                                       countryname == "Hungary" &
                                         year >= 2011 ~ 35,
                                       countryname == "Ireland" &
                                         year >= 2023 ~ 40,
                                       countryname == "Luxembourg" &
                                         year >= 2016 ~ 40,
                                       countryname == "Portugal" &
                                         year >= 2019 ~ 40,
                                       TRUE ~ defacto_threshold)) %>% 
  left_join(parline, by = c("countryname" = "country", "year")) %>% 
  mutate(women_rep = if_else(!is.na(women_rep.x),
                             women_rep.x,
                             women_rep.y)) %>% 
  select(-women_rep.x, -women_rep.y) %>% 
  ungroup()

# Early Eastern Europe (Varnegy2013: https://library.fes.de/pdf-files/bueros/budapest/10827.pdf)
eee <- tribble(~countryname, ~year, ~women_rep, ~list, ~defacto_threshold,
               "Czechia", 1990, 10, 1, 0,
               "Estonia", 1990, 5.7, 1, 0,
               "Hungary", 1990, 7.3, 1, 0,
               "Latvia", 1990, 15, 1, 0,
               "Lithuania", 1990, 9.9, 1, 0,
               "Poland", 1991, 9.1, 1, 0,
               "Slovakia", 1992, 15.3, 1, 0,
               "Slovenia", 1990, 13.3, 1, 0)

# Party Quotas (compilation)
party_quotas <- read_csv(file.path(descrep_path,
                                   "data-raw",
                                   "party_quotas.csv"),
                         col_types = "cdcddc") %>% 
  select(countryname, party_quota, adoption_year, party) %>% 
  filter(!is.na(party_quota)) %>% 
  group_by(countryname, party, party_quota) %>% 
  mutate(year = list(seq(adoption_year, 
                         Sys.Date() %>%
                           str_extract("\\d{4}") %>%
                           as.numeric())),
         countryname = countrycode::countrycode(countryname,
                                                "country.name",
                                                "country.name"),
         party_quota = round(party_quota)) %>% 
  unnest(year) %>% 
  ungroup() %>% 
  group_by(countryname, party, year) %>% 
  arrange(-adoption_year) %>%
  slice(1) %>%
  ungroup() %>% 
  select(-adoption_year)

# Borman and Golder: electoral systems
des <- rio::import(file.path(descrep_path,
                             "data-raw",
                             "des",
                             "es_data-v4_1.csv")) %>% 
  filter(presidential == 0) %>% 
  mutate(date = mdy(date)) %>% 
  arrange(country, desc(date)) %>% 
  distinct(country, year, .keep_all = TRUE) %>% 
  transmute(countryname = countrycode::countrycode(country,
                                                   "country.name",
                                                   "country.name",
                                                   warn = FALSE),
            year = year,
            list_pr = as.numeric(elecrule == 9),
            mmp = as.numeric(elecrule == 11),
            mmm = as.numeric(elecrule == 12),
            list = pmax(list_pr, mmp, mmm)) %>% 
  select(countryname, year, list)

if (!file.exists(file.path(descrep_path, "data-raw", "gdppc.rda"))) {
  download.file("https://unstats.un.org/unsd/amaapi/api/file/12",
                file.path(descrep_path, "data-raw", "ungdppc.xlsx"))
  gdppc <- readxl::read_excel(file.path(descrep_path,
                                        "data-raw",
                                        "ungdppc.xlsx"),
                              skip = 2) %>% 
    pivot_longer(matches("\\d{4}"), 
                 names_to = "year",
                 values_to = "gdppc") %>% 
    transmute(country = countrycode(Country, "country.name", "country.name",
                                    warn = FALSE),
              year = as.numeric(year),
              gdppc) %>% 
    filter(country %in% oecd_countries) %>% 
    bind_rows(tribble(~country, ~year, ~gdppc,
                      "United States", 2022, 62866.71)) # WB NY.GDP.PCAP.KD
  save(gdppc, file = file.path(descrep_path, "data-raw", "gdppc.rda"))
} else {
  load(file.path(descrep_path, "data-raw", "gdppc.rda"))
}
```

```{r movement_str}
if (!file.exists(file.path(descrep_path, "data-raw", "fmi.rda"))) {
  fmi_link <- "http://www.laurelweldon.com/uploads/1/4/1/9/14197205/map_and_figure_data_nov2021.xlsx"
  
  if (!file.exists(file.path(descrep_path,
                             "data-raw",
                             "fmi.xlsx"))) {
    download.file(fmi_link, 
                  file.path(descrep_path,
                            "data-raw",
                            "fmi.xlsx"))
  }
  
  set.seed(324)
  fmi <- read_excel(file.path(descrep_path,
                              "data-raw",
                              "fmi.xlsx"), 
                    skip = 1) %>% 
    mutate(Country = countrycode(Country, "country.name", "country.name",
                                 custom_match = c("Trin/Tob" =
                                                    "Trinidad & Tobago"),
                                 warn = FALSE),
           across(-Country, as.numeric)) %>% 
    rename_all(tolower) %>%
    arrange(country, year) %>% 
    group_by(country) %>% 
    mutate(decade = as.numeric(as.factor(year)),
           change_fmi = if_else(year == 2015, 0, lead(fmi) - fmi),
           yr0 = year) %>% 
    ungroup() %>% 
    bind_rows(tibble(country = c(rep("Latvia", 5)),
                     year = seq(1975, 2015, by = 10),
                     fmi = c(0, 0, 1,
                             NA_integer_, NA_integer_),
                     change_fmi = c(0, 1, 0, 0, 0))) %>% 
    bind_rows(tibble(country = c(rep("Luxembourg", 5)),
                     year = seq(1975, 2015, by = 10),
                     fmi = c(2, rep(NA_integer_, 4)),
                     change_fmi = c(0, 0, 0, 0, 0))) %>% 
    right_join(tibble(country = rep(oecd_countries, each = 49),
                      year = rep(1975:2023, 
                                 times = length(oecd_countries))),
               by = join_by("country", "year")) %>% 
    arrange(country, year) %>% 
    mutate(yr0 = if_else(!is.na(fmi), year, NA_integer_),
           fmi0 = fmi) %>% 
    group_by(country) %>% 
    fill(decade, yr0, fmi0, change_fmi) %>%
    mutate(yr = year - yr0,
           fmi = if_else(is.na(fmi), fmi0 + change_fmi*.1*yr, fmi0)) %>% 
    select(country, year, fmi)
  
  save(fmi, file = file.path(descrep_path, "data-raw", "fmi.rda"))
} else {
  load(file.path(descrep_path, "data-raw", "fmi.rda"))  
}

```

```{r join_party_data, eval=FALSE}
# PGE: gender egalitarianism
pge <- rio::import(here("data",
                        "pge.rda"))

pge_summary <- rio::import(here("data",
                                "pge_summary.rda")) %>% 
  mutate(across(starts_with("p"),
                ~ .x * 100,
                .names = "{.col}"))

# Party data
interleave <- function(data, var) {
  val <- deparse(substitute(var))
  name1.x <- paste0(val, ".x")
  name1.y <- paste0(val, ".y")
  data %>% 
    mutate(!!val := if_else(is.na(.data[[name1.x]]),
                            .data[[name1.y]],
                            .data[[name1.x]])) %>% 
    select(-all_of(name1.x), -all_of(name1.y))
}

by_party <- mp_parties %>% 
  filter(year > 1970) %>%
  mutate(countryname_old = countryname,
         countryname = countrycode::countrycode(countryname,
                                                "country.name",
                                                "country.name",
                                                warn = FALSE)) %>% 
  bind_rows(latam) %>% # not included in mp_parties, no continuity issues
  left_join(weeks,
            by = c("date", "party")) %>% 
  interleave(source) %>% 
  left_join(adams,
            by = c("date", "party")) %>% 
  interleave(source) %>% 
  left_join(party_continuity,
            by = c("countryname", "party")) %>% 
  mutate(party_old = party,
         party = if_else(is.na(party_new), party_old, party_new)) %>% 
  full_join(bind_rows(updates, australia, germany, united_states) %>%
              select(-partyname, -date),
            by = c("party", "countryname", "year")) %>% 
  interleave(source) %>% 
  left_join(qarot,
            by = c("countryname", "year")) %>% 
  left_join(des,
            by = c("countryname", "year")) %>% 
  arrange(countryname, party, year) %>% 
  mutate(pfem = case_when(!is.na(pfem) ~ pfem, # latam
                          is.na(pfem) & !is.na(pfem_a) ~ pfem_a, # updates, etc.
                          is.na(pfem_a) & !is.na(pfem_b) ~ pfem_b, # adams
                          TRUE ~ pfem_c), # weeks
         pfem_lag = lag(pfem),
         leader = case_when(!is.na(femaleleader) ~ femaleleader, # latam
                            is.na(femaleleader) &
                              !is.na(femaleleader_a) ~ femaleleader_a, # updates, etc.
                            is.na(femaleleader) &
                              is.na(femaleleader_a) &
                              !is.na(femaleleader_b) ~ femaleleader_b, # adams
                            TRUE ~ as.numeric(femaleleader_c)),
         absseat = if_else(is.na(absseat_a), absseat, absseat_a)) %>%
  group_by(countryname, year) %>% 
  mutate(totseats = mean(totseats, na.rm = TRUE)) %>% 
  ungroup() %>% 
  group_by(party) %>%
  mutate(parfam = mean(parfam, na.rm = TRUE),
         seats = absseat,
         totseats = if_else(is.na(totseats), totseats_a, totseats),
         totseats = case_when(countryname == "Canada" &
                                year > 2015 ~ 338,
                              countryname == "Japan" &
                                year == 2017 ~ 465,
                              countryname == "New Zealand" &
                                year == 2020 ~ 120,
                              TRUE ~ totseats),
         vote_percent = pervote,
         seat_percent = round((seats/totseats * 100), 1)) %>%
  ungroup() %>%
  left_join(party_quotas,
            by = c("countryname", "party", "year")) %>% 
  mutate(party_quota = if_else(is.na(party_quota), 0, party_quota),
         national_quota = if_else(is.na(defacto_threshold), 0,
                                  defacto_threshold),
         quota = pmax(party_quota, national_quota),
         country = if_else(is.na(country), 
                           round(party/1000),
                           country),
         parfam = if_else(is.na(parfam),
                          as.character(party) %>%
                            str_extract("\\d(?=\\d{2}$)") %>%
                            as.numeric() * 10,
                          parfam),
         parfam2 = case_when(between(parfam, 10, 30) ~ "left",
                             (parfam == 40 | parfam == 80) ~ "center",
                             between(parfam, 50, 60) ~ "right",
                             parfam == 70 ~ "extreme_right",
                             TRUE ~ "other"),
         parfam3 = if_else(parfam == 10, "green", parfam2),
         leftwing = if_else(parfam2 == "left", 1, 0)) %>% 
  make_dummies("parfam3") %>% 
  group_by(country) %>% 
  fill(list, countryname) %>% 
  ungroup() %>% 
  distinct(country, year, party, pfem, .keep_all = TRUE) %>% 
  filter(countryname %in% oecd_countries)

party_pge <- pge %>% 
  left_join(fmi, by = join_by(country, year)) %>%
  mutate(fmi = if_else(country == "United States" & year < 1975, 3, fmi)) %>% 
  group_by(draw) %>% 
  group_split() %>% 
  map(. %>% 
        inner_join(by_party,
                   by = c("country" = "countryname", "year")) %>% 
        select(country, year, party, pfem, pge, fmi))

save(by_party, file = file.path(descrep_path, "data", "by_party.rda"))
save(party_pge, file = file.path(descrep_path, "data", "party_pge.rda"))
```

```{r join_country_data, eval=FALSE}
# Country data
by_country0 <- qarot %>% 
  left_join(des,
            by = c("countryname", "year")) %>% 
  bind_rows(eee) %>% 
  left_join(pge_summary,
            by = c("countryname" = "country", "year")) %>% 
  left_join(fmi,
            by = c("countryname" = "country", "year")) %>% 
  mutate(country = countryname,
         iso2c = countrycode::countrycode(countryname, 
                                          "country.name",
                                          "iso2c",
                                          warn = FALSE),
         women_rep = case_when(countryname == "Lithuania" &
                                 year == 1990 ~ 9.9,
                               countryname == "Poland" &
                                 year == 1991 ~ 9.1,
                               TRUE ~ women_rep),
         list = case_when(countryname == "Mexico" &
                            year %in% c(1994, 1997, 2021) ~ 1,
                          countryname == "Germany" &
                            year == 2021 ~ 1,
                          countryname == "Canada" &
                            year == 2021 ~ 0,
                          countryname == "United States" &
                            year == 2022 ~ 0,
                          TRUE ~ list),
         women_rep = case_when(countryname == "Germany" &
                                 year == 1980 ~ 8.3,
                               countryname == "Germany" &
                                 year == 1983 ~ 9.8, #https://www.bpb.de/themen/gender-diversitaet/frauen-in-deutschland/49418/frauenanteil-im-deutschen-bundestag/
                               countryname == "Germany" &
                                 year == 1987 ~ 15.4,
                               TRUE ~ women_rep),
         pge = case_when(is.na(pge) &
                           country == "Australia" ~ lead(pge),
                         is.na(pge) & 
                           country == "France" ~ lead(pge, 2),
                         is.na(pge) &
                           country == "Ireland" ~ lead(pge),
                         is.na(pge) &
                           country == "Netherlands" ~ lead(pge),
                         is.na(pge) &
                           country == "New Zealand" ~ lead(pge),
                         is.na(pge) &
                           country == "Spain" ~ lead(pge),
                         is.na(pge) &
                           country == "Turkey" ~ lead(pge),
                         TRUE ~ pge),
         pge_se = case_when(is.na(pge_se) &
                              country == "Australia" ~ lead(pge_se)*1.1,
                            is.na(pge_se) & 
                              country == "France" ~ lead(pge_se, 2)*1.1,
                            is.na(pge_se) &
                              country == "Ireland" ~ lead(pge_se)*1.1,
                            is.na(pge_se) &
                              country == "Netherlands" ~ lead(pge_se)*1.1,
                            is.na(pge_se) &
                              country == "New Zealand" ~ lead(pge_se)*1.1,
                            is.na(pge_se) &
                              country == "Spain" ~ lead(pge_se)*1.1,
                            is.na(pge_se) &
                              country == "Turkey" ~ lead(pge_se)*1.1,
                            TRUE ~ pge_se),
         fmi = if_else(country == "United States" & year < 1975, 3, fmi),
         fmi_se = if_else(country == "United States" & year < 1975, 0, fmi),
         women_rep_included = ifelse(!is.na(lag(pge)),
                                     women_rep,
                                     NA_real_),
         national_quota = if_else(is.na(defacto_threshold), 0,
                                  defacto_threshold)) %>% 
  filter(countryname %in% oecd_countries) %>%
  left_join(gdppc, by = c("country", "year")) %>% 
  mutate(gdppc = gdppc/10000) %>% 
  arrange(country, year) 

country_pge <- pge %>% 
  group_by(draw) %>% 
  group_split() %>% 
  map(. %>% 
        group_by(country) %>% 
        mutate(pge = pge*100) %>%
        ungroup() %>% 
        inner_join(by_country0 %>%
                     filter(!is.na(list)) %>% 
                     group_by(country) %>% 
                     mutate(women_rep_lag = lag(women_rep),
                            pge_lag = lag(pge),
                            pge_se_lag = lag(pge_se)) %>% 
                     ungroup() %>% 
                     filter(!is.na(pge_lag) & !is.na(pge)) %>% 
                     select(-pge),
                   by = c("country" = "countryname", "year")) %>% 
        select(country, year, women_rep, pge, fmi))

save(by_country0, file = file.path(descrep_path, "data", "by_country0.rda"))
save(country_pge, file = file.path(descrep_path, "data", "country_pge.rda"))
```    

```{r wr_b}
if (!file.exists(file.path(descrep_path, "data", "wr_results.rda"))) {
  by_country0 <- rio::import(file.path(descrep_path, "data", "by_country0.rda"))
  
  by_country <- by_country0 %>%
    filter(!is.na(list)) %>% 
    group_by(country) %>% 
    mutate(women_rep_lag = lag(women_rep),
           pge_lag = lag(pge),
           pge_se_lag = lag(pge_se)) %>% 
    ungroup() %>% 
    filter(!is.na(pge) & !is.na(pge_lag))
  
  by_country2 <- by_country %>% 
    group_by(country) %>% 
    transmute(year,
              women_rep,
              women_rep_lag, # from previous election
              women_rep_mean = mean(women_rep_lag, na.rm = TRUE),
              women_rep_diff = women_rep_lag - women_rep_mean,
              pge,
              pge_se,
              pge_lag,      # from previous election
              pge_se_lag,
              pge_mean = mean(pge, na.rm = TRUE),
              pge_mean_se = sqrt(sum(pge_se^2, na.rm = TRUE))/
                length(pge),
              pge_diff = pge - pge_mean,
              pge_diff_se = sqrt(pge_se^2 + pge_mean_se^2)/2,
              fmi,
              fmi_mean = mean(fmi, na.rm = TRUE),
              fmi_diff = fmi - fmi_mean,
              national_quota,
              national_quota_mean = mean(national_quota),
              national_quota_diff = national_quota - national_quota_mean,
              list,
              list_mean = mean(list, na.rm = TRUE),
              list_diff = list - list_mean,
              gdppc,
              gdppc_mean = mean(gdppc, na.rm = TRUE),
              gdppc_diff = gdppc - gdppc_mean) %>% 
    ungroup()
  
  bf_wr <- bf(women_rep ~ 
                me(pge_diff, pge_diff_se) +
                me(pge_mean, pge_mean_se) +
                fmi_diff +
                fmi_mean +
                national_quota_diff +
                national_quota_mean + 
                list_diff +
                list_mean +
                women_rep_lag +
                (1|c|country) + (1|t|year))
  
  m1_wr_b <- brm(formula = bf_wr,  
                 data = by_country2,
                 backend = "cmdstanr",
                 control=list(adapt_delta = 0.99, 
                              max_treedepth = 12),
                 warmup = 500, 
                 iter = 1000, 
                 chains = 4, 
                 cores = 4,
                 seed = 324)
  
  m1_data <- m1_wr_b$data
  
  m1_data_2sd <- m1_data %>% 
    select(pge_diff,
           pge_mean,
           fmi_diff,
           fmi_mean,
           national_quota_diff,
           national_quota_mean,
           list_diff,
           list_mean, 
           women_rep_lag) %>% 
    summarize(across(everything(), by2sd)) %>% 
    pivot_longer(everything()) %>% 
    mutate(`.variable` = case_when(name == "pge_mean" ~ 
                                     "bsp_mepge_meanpge_mean_se",
                                   name == "pge_diff" ~
                                     "bsp_mepge_diffpge_diff_se",
                                   TRUE ~ paste0("b_", name)),
           var_names = c("Public Gender Egalitarianism, Difference",
                         "Public Gender Egalitarianism, Mean",
                         "Feminist Movement Index, Difference",
                         "Feminist Movement Index, Mean",
                         "National Quota, Difference",
                         "National Quota, Mean",
                         "Electoral List, Difference",
                         "Electoral List, Mean",
                         "Lagged Descriptive Representation"),
           sd2 = ifelse(str_detect(.variable, "list_|fmi_diff|_lag"),
                        1,
                        value))
  
  coef_data0_m1 <- m1_wr_b %>% 
    as_draws_df() %>% 
    tidybayes::gather_draws(`bs?p?_.*`, regex = TRUE) %>% 
    filter(!str_detect(`.variable`, "_Intercept")) %>% 
    left_join(m1_data_2sd, by = join_by(.variable))
  
  cy_summary_m1 <- m1_data %>%
    count(country) %>%
    pull(n) %>%
    summary()
  
  save(m1_data, m1_data_2sd, coef_data0_m1, cy_summary_m1, 
       file = file.path(descrep_path,
                        "data",
                        "wr_results.rda"))
} else {
  by_country0 <- rio::import(file.path(descrep_path, "data", "by_country0.rda"))
  by_country <- by_country0 %>%
    filter(!is.na(list)) %>% 
    group_by(country) %>% 
    mutate(women_rep_lag = lag(women_rep),
           pge_lag = lag(pge),
           pge_se_lag = lag(pge_se)) %>% 
    ungroup() %>% 
    filter(!is.na(pge) & !is.na(pge_lag))
  
  load(file = file.path(descrep_path, "data", "wr_results.rda"))
}
```

```{r wrts, fig.cap="Women's Descriptive Representation in the OECD \\label{wrts}", fig.height = 9, fig.width = 7.5}
by_country0 %>%
  filter(!is.na(women_rep)) %>%
  group_by(country) %>%
  mutate(lwr = last(women_rep)) %>%
  ggplot(aes(x = year, y = women_rep)) +
  theme_bw() +
  theme(legend.position = "none") +
  coord_cartesian(xlim = c(1980, 2022)) +
  labs(x = NULL, y = "Desc Rep") +
  geom_line(linetype = "dotted") +
  geom_line(aes(y = women_rep_included)) +
  facet_wrap(~reorder(country, -lwr), ncol = 6) +
  theme(axis.text.x  = element_text(size = 7,
                                    angle = 90,
                                    vjust = .45,
                                    hjust = .95),
        strip.text.x = element_text(size = 8),
        strip.background = element_rect(fill = "white", colour = "white"),
        plot.title = element_text(size=8)) +
  plot_annotation(caption = "Note: Solid lines trace trends over the years covered in this chapter's analyses; dotted lines extend to years that were not\nincluded.  Sources: Hughes et al. (2019); Inter-Parliamentary Union (2023).")
```

Trends in the share of women elected to the lower houses of the legislature, the most commonly studied measure of women's descriptive representation, across the OECD countries over more than forty years can be found in Figure&nbsp;\ref{wrts}.
The data are drawn from the Quota Adoption and Reform Over Time (QAROT) dataset [@Hughes2019], supplemented with information provided by the @IPU2023.
The OECD countries appear in order of women's percentage of legislative seats in the most recent available year.
The differences are stark.
Across much but not all of western Europe, women politicians have made rapid and substantial gains.
These trends are perhaps most striking in Belgium and Spain.
In the Nordics---Iceland, Sweden, Norway, Finland, and Denmark---parity has been relatively close, if yet unattained, for most or all of the twenty-first century.
Along with Mexico, the Latin American countries of Costa Rica, Chile, and Colombia have seen sharp increases in the share of women in the legislature in their most recent elections, albeit from a range of previous values.
On the other hand, any movement toward gender equality in legislative officeholding has been slow and halting in a number of countries, from Ireland and Greece to South Korea and Japan. 

These differences across countries in women's descriptive representation have been closely studied.
Case studies and cross-national work alike have found support for the elite-led theory described in Chapter 2.
Both ways in which this theory suggests the supply of women candidates may be increased appear to work.
Countries that employ electoral systems that include party lists have been found to elect more women than those without, evidence that party lists provide better opportunities for feminist activists to convince party leaders to run more female candidates---or indeed to supplant those leaders and do it themselves [see, e.g., @Matland2005; @Paxton2021, 164-169].
And the national quota laws advocated by these activists that, when adopted, require all parties to put forward a minimum share of women as candidates, likewise have been found generally to increase the share of women elected, if not typically by the amount their mandated candidate shares would perhaps lead one to expect [see, e.g., @Schwindt-Bayer2009; @Paxton2015].

The role in this process of public opinion has attracted much less attention.
Again, this is not because scholars do not think that the public is important.
They certainly do.
In the rich democracies that we are concerned with in this book, after all, the public is the electorate, and the mass-public theory described in Chapter 2 argues that the public is very important.
But the limitations in the measures of public opinion available to researchers has constrained them to study countries at just one or a few time points [see, e.g., @Paxton2003; @Alexander2012] or to rely on very loose proxies such as predominant religion or the percentage of women already in office [see, e.g., @Burns2001, 340-341; @Claveria2014; @Barnes2018].
Cross-national and longitudinal investigation of, for example, the argument that such "attitudes influence both the supply of, and demand for, female candidates" has remained persistently a topic for future research [@Paxton2010, 47].
Equipped with the PGE data, this chapter takes up the question of the role of public attitudes in the election of women to legislative office in the rich democratic countries.

To quickly review, the theory connecting gender egalitarianism in the public sphere with women's descriptive representation is straightforward.
Where the public holds more egalitarian views toward women in politics and the workforce, voters will be more willing to elect female candidates running for office, and party gatekeepers will be more willing to allow women to run.
In other words, more egalitarianism should be expected to increase both demand and supply, with the consequence that more women will hold office.

Although women's share of the legislature does vary somewhat in the course of most legislative terms---officeholders retire and are replaced, for example---those fluctuations are not really relevant to the explanations for descriptive representation that we have discussed, all of which focus on what happens in elections.
Therefore, we examine only election years.
Combining the data presented in Figure&nbsp;\ref{wrts} with the PGE database gives a substantial number of elections to study.
In fact, across the 38 countries, there are `r nrow(m1_data)` elections, for an average of more than eight elections per country.
The sample is unbalanced, however: some countries hold elections more often than others, of course, but there are also longer series of PGE data for some countries than others.

```{r electionsmap, fig.cap="Observed Democratic Elections in the OECD \\label{electionsmap}", fig.height = 6, fig.width = 7.5}

world1 <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf") %>%
  filter(!admin == "Antarctica")

world_geom <- world1 %>% 
  mutate(country = countrycode::countrycode(admin,
                                            "country.name",
                                            "country.name"),
         oecd = country %in% oecd_countries) %>% 
  filter(!admin == "Antarctica") %>% 
  left_join(m1_data %>%
              group_by(country) %>% 
              count(name = "elections") %>% 
              mutate(elections = ifelse(elections >=18, 18, elections)),
            by = "country")

country_map <- ggplot() +
  geom_sf(data = world1) +
  geom_sf(data = world_geom,
          aes(fill = elections)) +
  coord_sf(crs = sf::st_crs("ESRI:53035")) +
  scale_fill_distiller(na.value = "white", 
                       palette = "Greys",
                       direction = 1) +
  theme(legend.position="none")

country_bar <- m1_data %>%
  group_by(country) %>% 
  count(name = "elections") %>% 
  ggplot(aes(forcats::fct_reorder(country, elections, .desc = TRUE), 
             elections)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  theme(axis.title.x = element_blank(),
        axis.text.x  = element_text(angle = 90, vjust = .45, hjust = .95),
        axis.title.y = element_text(size = 9),
        plot.title = element_text(hjust = 0.5, size = 11)) +
  ylab("Elections Observed")

country_map +
  country_bar +
  plot_layout(ncol = 1, widths = c(1, 1), heights = c(5, 2))
```

The number of elections available for our analyses in each country are depicted in Figure&nbsp;\ref{electionsmap}.
Our scale here runs from light to dark: the darker the country the more observed elections we have.
The United States, with its short two-year terms to the House of Representatives and a series of PGE scores spanning a half century, has the most elections to examine, followed at considerable distance by Australia.
Colombia and Costa Rica are observed in just five elections, and Switzerland in only four.
Still, a solid majority of our countries, twenty-six of the thirty-eight, have been observed in at least eight elections, giving us some confidence that we have adequate data to capture not only the differences between the countries in which many women are elected and those with much smaller numbers of women in office but also and perhaps more importantly the dynamics of change over time.
We will start, though, by looking at the raw bivariate data.

```{r wrplot, fig.cap="Public Gender Egalitarianism and Women's Share of Legislative Seats in OECD Democracies \\label{wrplot}", fig.height = 9, fig.width = 7.5}
country_pge <- rio::import(file.path(descrep_path, "data", "country_pge.rda"))

wr_cor <- map(country_pge,
              ~ with(.x, cor(pge, women_rep,
                             use = "pairwise.complete.obs"))) %>% 
  unlist() %>% 
  mean() %>% 
  round(2) %>% 
  sprintf("%.2f", .) %>% 
  paste0("R = ", .)

wr_label <- tibble(pge = 25, women_rep = 50, label = wr_cor)

ggplot(by_country,
       aes(x = pge,
           y = women_rep)) +
  geom_segment(aes(x = p10, xend = p90,
                   y = women_rep, yend = women_rep),
               na.rm = TRUE,
               alpha = .2) +
  geom_text(aes(label = iso2c), size = 2) +
  geom_smooth(method = 'lm', se = FALSE) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=10),
        axis.title = element_text(size=12)) +
  scale_x_continuous(limits=c(20, 100),
                     breaks=seq(20, 100, by = 20)) +
  scale_y_continuous(limits=c(0, 50),
                     breaks=seq(0, 50, by = 10)) +
  labs(x = "Public Gender Egalitarianism", y = "Women's Share of Legislative Seats") +
  geom_label(data = wr_label, aes(label = label)) +
  plot_annotation(caption = "Notes: Whiskers describe 80% credible\nintervals.")
```

Are gender egalitarian public opinion and women's descriptive representation related?
Every point in Figure&nbsp;\ref{wrplot} represents an election in a particular country, and each is labeled with that country's two-character codes assigned by the International Organization for Standardization.
The figure's x-axis presents the country's Public Gender Egalitarianism score, measured in the year the election was held.
And because the PGE scores are estimated with uncertainty, each point is shown with horizontal whiskers tracing its 80% credible interval.
The plot's y-axis depicts the percentage of seats won by women in each election to the lower house of the national legislature in that election.
There is a strong positive relationship between the two.
Taking the uncertainty in the PGE scores into account, the bivariate correlation is `r wr_cor %>% str_extract("\\.\\d{2}")`.
This is promising evidence for the mass-public theory, but there are many potential explanations for a strong correlation besides the theory that more egalitarian views among the public cause more women to win office.


## Analyzing Descriptive Representation in National Legislatures {.unnumbered}
To better assess whether gender egalitarian public opinion influences women's descriptive representation, we need a more sophisticated analysis.
To start, we will need to take into account other potential explanations for when more women are elected to office, in particular, those offered by the elite-led theory.
After all, public opinion may simply reflect cues provided by the activists and party leaders who play a central role in the elite-led theory.
If that is the case, the strong relationship seen in Figure&nbsp;\ref{wrplot} would result from both public opinion (through these cues) and descriptive representation (through their successes in getting national quotas enacted and women candidates on party lists) being consequences of the strength of feminist activists.
To rule out this potential source of spurious association, we control for the strength of any national legislative quotas for women and the presence of an electoral system that includes party lists as well as a direct measure of the strength of the feminist movement.

Data on whether a country's electoral system contains at least a party-list component comes from the Democratic Electoral Systems Around the World dataset [@Bormann2022].
Elections held under list proportional representation, mixed-member proportional, and mixed-member majoritarian electoral rules are coded one for this variable, while all other elections are coded zero.
Some `r {mean(by_country$list)*100} %>% round()`% of the elections in our sample were held with such rules.

Data on national quotas are drawn from the QAROT database and updated with information from the Gender Quotas Database maintained by the @IDEA2023.
@Hughes2019, which presents the QAROT data, provides an exceptionally good measure of quotas, the de facto threshold.
The de facto threshold is based on "a country's stated quota threshold and the breadth of a quota's actual reach" [@Hughes2019, 225].
It is the combination of these two factors that determine the mandated minimum share of women on the ballot.
For example, South Korea requires 50% of candidates on each party's list to be women.
However, this quota applies exclusively to the proportion of the legislature that is elected from party lists, which, under the country's mixed-member electoral system, is only about a sixth of the National Assembly.
For the remaining roughly five-sixths of the seats that are elected from single-member districts, only 30% of the candidates are required to be women.
Taking these quota levels and their respective breadths of application together, the de facto threshold in Korea is about one-third of each party's candidates.
There are other important aspects of national legislative quotas, such as whether and how they are enforced or if the position of women on an electoral list is specified.
Still, the de facto threshold provides a straightforward measure of the share of women candidates that is required to appear on the ballot, and we use it as our measure of national legislative gender quotas here.

```{r qarot, fig.cap="Adoption and Reform of National Legislative Gender Quotas in OECD Democracies \\label{qarot}", fig.height = 4.5, fig.width = 7.5}
dft_data <- by_country %>% 
  group_by(country) %>% 
  mutate(dft = if_else(defacto_threshold==lag(defacto_threshold),
                       NA,
                       defacto_threshold),
         to_jitter = (year == 2011)) %>%
  ungroup() %>% 
  filter(!is.na(dft))

ggplot(dft_data, aes(x = year, y = dft, label = iso2c)) +
  geom_text(data = dft_data %>% filter(!to_jitter),
            size = 2.5) +
  geom_text(data = dft_data %>% filter(to_jitter),
            size = 2.5,
            position = position_jitter(width = .5, height = .7)) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=10),
        axis.title = element_text(size=12)) +
  scale_x_continuous(limits=c(1980, 2020)) +
  scale_y_continuous(limits=c(0, 50),
                     breaks=seq(0, 50, by = 10)) +
  labs(x = NULL, y = "National Quota, De Facto Threshold") +
  plot_annotation(caption = "Sources: Hughes et al. (2019); International Institute for Democracy and Electoral Assistance (2023).")
```

Figure&nbsp;\ref{qarot} shows the adoption and reform of national legislative gender quotas over time in the rich democratic countries of our study.
Italy was the pioneer among these countries, but its small quota was abolished a few years later.
In later years, those quotas that have been adopted have been more robust, and many countries that adopted quotas strengthened them over time.
Belgium and Mexico, which along with Costa Rica now have de facto quotas requiring that women make up half of all candidates, had earlier adopted lower quotas.

While the presence of party lists have been repeatedly shown to provide an institutional structure more conducive for activists to convince parties to increase descriptive representation, and gender quotas

With these data in hand, we can turn to how best to use them to test our theories.
The dataset includes a series of time points representing years with democratic elections for each of the thirty-eight OECD member states.
Pooling these time series and analyzing them together has two long-appreciated benefits [see, e.g., @Stimson1985, 916].
On the one hand, examining changes over time can provide strong evidence of causality for even questions involving concepts like public opinion and women in office that are not subject to manipulation by researchers and so are ill-suited to experimental research.
On the other, examining many countries can provide strong evidence that our conclusions are general and not specific to a particular, possibly exceptional, context.
These are powerful advantages.
But certain statistical difficulties associated with pooling time series have been long recognized as well [see, again, among others, @Stimson1985].

@Shor2007 demonstrates that two of the difficulties with pooled time series are best addressed using a Bayesian multilevel model that includes varying intercepts for both space and time.
Such models take into account the distinctive structure of our data as comprised of observations of a particular country in a particular year.
They incorporate the fact that what we see in an observation is influenced by _where_ we are looking.
All observations of Spain, for example, may share distinctively Spanish traits.
If these distinctive traits are unknown and ignored, our model will consistently under- or over-estimate women's descriptive representation for all of our Spanish observations over time.^[
This problem is a form of _heteroscadisticity_, a violation of the assumption of regression analyses that error variances are equal.]
But these distinctive traits can be modeled by including a varying intercept for each country, a parameter that shifts our prediction of the outcome for all observations from that country by the same amount.
Together, the country parameters avoid the problems caused from those national traits for which we do not have data or otherwise exclude from our analysis.
These models also recognize that what we observe is also influenced by _when_ we are looking; to give an instance, all observations from 2020 may share peculiarities as a result of the COVID-19 pandemic and other events felt around the globe that year.^[
Such contemporaneous correlation violates the regression assumption that, conditional on the model, the errors in our predictions are independent.]
These distinctive temporal characteristics are similarly modeled with a varying intercept for each year.
The year parameters shift our predictions for all observations from a particular year equally to account for whatever 'time shocks' operated on all countries simultaneously at that point in time [@Shor2007, 171-172].

Another persistent concern with in the analysis of pooled time-series data is that cross-country differences can be confused with over-time changes.
Change in our explanatory variable followed in time by change in what we seek to explain provides strong evidence of causation.
That our proposed cause and effect covary across countries, on the other hand, _may_ reflect potentially different long-running and historical causal processes, but it may also reflect other, unmodeled cross-national differences.
We follow @Bell2015 and employ the 'within-between random effects' specification to take into account the difference between change over time and differences across countries.
To do this, we separate each time-varying predictor into its mean value for each country, which does not vary over time, and the difference between its value in a given year in a country and this country mean.
The latter, time-varying difference variables capture the short-term causal effects of the predictors.
The former, time-invariant country-mean variables reflect their often different long-run, historical effects as well as any country differences that would otherwise cause omitted-variable bias [@Bell2015, 137].

Yet another complication occurs when the processes observed are dynamic.
That is, empirically, that past values predict current values and, theoretically, that there reasons to think that the past matters to the present.
As in most events that unfold over time, that is true in this case.
Here, in the present election, women serving in office in the just concluded legislative term may on the one hand enjoy the benefits of incumbency, but on the other they may be held to higher standards of conduct than their male peers.
Either way, the extent of women's descriptive representation in the preceding term can be expected to influence the extent of representation in this one.
And public opinion, such as with regard to gender equality in the public sphere, is often theorized similarly, with present attitudes thought to be a function of past attitudes as updated with new information.
Given these circumstances, we include as a predictor the lag of the variable to be predicted, that is, its value at the time of the last election [see @Keele2006].

One last source of problems is measurement uncertainty.
As described in the previous chapter, our measure of public gender egalitarianism, the PGE scores, are estimated with uncertainty as a result of the sparsity and incomparability of surveys addressing the topic.
Because measurement uncertainty in a latent variable like the PGE scores can bias our the results of our analyses, to ignore it is to run the risk of drawing incorrect conclusions from the data [see @Tai2022].
We therefore incorporated the measurement uncertainty in the PGE scores into our analysis.
The model was estimated using the `brms` R package [@Burkner2017] with noninformative priors.^[
By default, `brms` assigns linear regression coefficients improper flat priors over the real numbers.
That means that, before considering the data and model, the probability that a coefficient takes on any value, from negative infinity to positive infinity, is assumed to be equal.
Weakly informative priors---for example, normal(0, 2)---yield substantively similar results for all analyses.]

Figure&nbsp;\ref{m1plot} presents the results.
The shaded regions represent the posterior probability distributions; the higher the shading, the more likely that what each region depicts---here, one regression coefficient---takes on that value conditional on these data and this model.
The dots mark the median values of these distributions, so half of the probability falls to either side.
The whiskers trace the 80% credible intervals; that is, there is an 80% probability that the regression coefficient falls within that range, again, conditional on these data and this model.
The bottom panel shows, as expected, that descriptive representation is dynamic: the percentage of legislators who are women after the previous election strongly predicts the percentage of legislators who are women after this one.
Incumbency matters.
But the unstandardized coefficient is less than one, which suggests that absent the actions of elites and the support of the public as considered in the model, descriptive representation declines rather than grows over time.
This provides suggestive evidence that women in office are held to a higher standard than their male colleagues.

```{r m1plot, fig.cap="Predicting Women's Descriptive Representation in OECD Democratic Elections \\label{m1plot}", fig.height = 7, fig.width = 7.5}
ordered <- c("Public Gender Egalitarianism, Difference",
             "Public Gender Egalitarianism, Mean", 
             "Feminist Movement Index, Difference",
             "Feminist Movement Index, Mean", 
             "Descriptive Representation, Difference",
             "Descriptive Representation, Mean",
             "National Quota, Difference",
             "National Quota, Mean",
             "Electoral List, Difference",
             "Electoral List, Mean",
             "Lagged Descriptive Representation") %>% 
  rev()

coef_data_m1 <- coef_data0_m1 %>% 
  mutate(std_coef = round(.value * sd2, 1),
         term = factor(var_names, levels = ordered)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  left_join(m1_data_2sd, ., by = join_by(.variable))

coef_data_m1_total <- coef_data0_m1 %>% 
  group_by(.chain, .iteration, .draw) %>% 
  mutate(alpha = mean(ifelse(name=="women_rep_lag", .value, NA_real_),
                      na.rm = TRUE)) %>% 
  ungroup() %>% 
  group_by(.variable) %>% 
  mutate(std_coef0 = round(.value * sd2, 1),
         std_coef = round(std_coef0/(1 - alpha), 1),
         term = factor(var_names, levels = ordered)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  left_join(m1_data_2sd, ., by = join_by(.variable))

coef_plot_m1 <- coef_data0_m1 %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered)) %>% 
  filter(!str_detect(var_names, "Lagged")) %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  theme_light() +
  xlab("Standardized Coefficients") +
  ylab(NULL) 

lag_plot_m1 <- coef_data0_m1 %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered)) %>% 
  filter(str_detect(var_names, "Lagged")) %>% 
  mutate(term = "Lagged Women's Descriptive Representation") %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  theme_light() +
  theme(strip.text.x = element_blank(),
        strip.background = element_blank()) +
  xlab("Unstandardized Coefficient") +
  ylab(NULL)

coef_plot_m1 + lag_plot_m1 +
  plot_layout(ncol = 1, widths = c(1, 1), heights = c(7, 1)) +
  plot_annotation(caption = "Notes: Dots indicate posterior medians; whiskers describe 80% credible\nintervals; shading depicts the posterior probability distribution.")
```

The regression coefficients for the variables suggested by the elite-led and public opinion theories appear in the top panel of the figure.
For the variables regarding electoral lists, these coefficients are scaled to the values of zero (the electoral system does not include party lists) and one (the system does have party lists).
The coefficients of the other variables are each multiplied by a factor of two times the variable's standard deviation; this puts all of the coefficients on the same scale for easy comparison of their magnitudes [see @Gelman2008a].

Continuing to work up the plot's y-axis, consider the variables about the presence of a party list component in a country's electoral system.
The coefficient for the country mean of this variable indicates that in countries with party lists women make up `r get_coef("list_mean", coef_data_m1, "std_coef")` percentage points more of the legislature, with an 80% credible interval of `r get_coef("list_mean", coef_data_m1, "ci")` percentage points, than in countries without party electoral lists.
Again, this is the difference in descriptive representation _between_ these two groups of countries, those with lists and those without, in a single election.
Because the women who win office in one election then shape women's descriptive representation in future elections, this difference compounds over time.
Taking into account the dynamics of the model through the lagged value of women's descriptive representation, over time, the total effect of this difference is estimated to reach `r get_coef("list_mean", coef_data_m1_total, width = .8)` points.
However, while this may be the long-term historical effect of electoral system differences on women's descriptive representation, it may also reflect unobserved differences between these countries that correlate with their electoral systems.
Therefore, although this coefficient provides some evidence for the electoral-list aspect of the elite-led theory, it should not uncritically understood as evidence that party lists _cause_ more women to be elected.

Our best evidence for causation comes instead from the variable labeled as the _difference_ in the presence of an electoral list.
This variable allows us to estimate the difference between having a list and not having a list over time _within_ the data for a single country.
As looking within a country holds so many possible but unobserved alternate causes constant, the grounds for considering the estimated coefficient for this variable evidence of causation are considerably more solid.
Unfortunately for the purposes of estimation, in this case only three countries in our dataset---France, Japan, and New Zealand---adopted electoral-system reforms that changed whether there was a party list over the elections we observe.
Further, in each of these countries, the reform came after only the first observed election.
As a result, there is little leverage in these data to precisely estimate a causal effect, and indeed the range of credible values is very wide, from `r get_coef("list_diff", coef_data_m1, type = "ci")` percentage points.
Because this range includes zero (marked in the figure with the dashed vertical line), these data and this model provide no support for a short-run effect on women's descriptive representation of party-list electoral systems at all.

The findings with regard to national legislative gender quotas, on the other hand, are much stronger.
The difference in descriptive representation _between_ a country that never had a quota of female candidates and a country whose de facto threshold required an average, over all of its observed elections, of 22% of each party's candidates to be women (that is, two standard deviations higher on this variable) is `r get_coef("quota_mean", coef_data_m1)` percentage point in one election, reaching `r get_coef("quota_mean", coef_data_m1_total)` points over time.
And across elections _within_ a country, as national legislative gender quotas increase, women's descriptive representation also increases.
From an election when the national quota was ten points below the country's observed mean to one when the quota was ten points above its mean (again a two standard-deviation difference), women's descriptive representation is estimated to increase by `r get_coef("quota_diff", coef_data_m1)` percentage points immediately, and this effect compounds to `r get_coef("quota_diff", coef_data_m1_total)` points over time.
The within-country estimate is strong evidence of a causal process.
Consistent with earlier research on this elite-led argument, this model shows that the hard work of women's organizations and feminist activists to win passage of national legislative quotas for women pays off in more women in office, albeit at rates of perhaps little better than half of the required share of candidates on average.

We next turn to the direct effect of the strength of the feminist movement, net of the opportunities granted by electoral lists and success in enacting national quotas.
Compared with countries with a mean feminist-movement index score one standard deviation lower than average, in countries whose feminist-movement index score was one standard deviation higher than average the share of the legislature held by women was `r get_coef("fmi_mean", coef_data_m1)` percentage points higher in one election and `r get_coef("fmi_mean", coef_data_m1_total)` points higher over time.
Changes in the strength of the feminist movement over time, moreover, are less consistently associated with gains in women's descriptive representation.
A one-point increase in the FMI index is estimated to yield a short-run `r get_coef("fmi_diff", coef_data_m1, type = "std_coef")` percentage-point increase in women's descriptive representation, but with an 80% confidence interval from `r get_coef("fmi_diff", coef_data_m1, type = "ci")` points, or `r get_coef("fmi_diff", coef_data_m1_total)` over time.
It appears that, net of the other variables in the model, the strength of feminist movements has only a limited and inconsistent direct influence on women's descriptive representation.

At last, we reach the top rows of the plot, where we find the coefficients for Public Gender Egalitarianism.
Once more, the country mean of this variable captures the differences between countries.
Compared to a country like Czechia or Latvia with a mean PGE score of about 54, a standard deviation below the OECD average for this variable in our dataset, a country like Canada or Iceland with a mean PGE score of about 72, a standard deviation above, is estimated to elect women to `r get_coef("pge_mean", coef_data_m1)` percentage points greater share of the national legislature in a single election.
Given that descriptive representation is dynamic, this difference grows to `r get_coef("pge_mean", coef_data_m1_total)` percentage points over time.
As was the case with our other country-mean variables, this result may reflect historical processes over the long term; it may reflect some degree of reverse causation, in which women in office shape the public's views of gender equality; and it may also simply be due to other country-level factors correlated with public opinion that have yet to be identified, measured, and included in the model.
This ambiguity is not actually a problem.
This result's utility is not really in a causal interpretation.
The true importance in this model of the result for the country-mean of Public Gender Egalitarianism is that it isolates the consequences of changes in egalitarian public opinion over time.

And the topmost row of Figure&nbsp;\ref{m1plot} shows the posterior probability distribution for the difference in PGE over time within each country.
With this dataset and model, this distribution indicates that there is a `r {coef_data0_m1 %>% filter(name == "pge_diff" & .value > 0) %>% nrow()}/{coef_data0_m1 %>% filter(name == "pge_diff") %>% nrow()} * 100`% chance that this variable has a positive effect on women's descriptive representation.
Compared to an election held when egalitarian public opinion is a standard deviation below the country's mean, an election held when egalitarian public opinion is a standard deviation above that value will yield `r get_coef("pge_diff", coef_data_m1)` percentage points more women in the national legislature, compounding over time to `r get_coef("pge_diff", coef_data_m1_total)` percentage points.

This result provides strong evidence that the public's views on gender equality in the public sphere of politics and work actually does shape the extent to which women gain an equal share of descriptive representation.
But it suffers two problems.
The first problem is that there is a disconnect between the elite-led and mass-public theories and this evidence.
Both of those theories concerned processes that largely or entirely take place within political parties.
In the elite-led theory, it is _political parties_ that respond to pressure from women's organizations and internal activists to adopt gender quotas or to run more women as candidates on their electoral lists.
In the mass-public theory, it is _political parties_ that react to an increasingly egalitarian public by running more women candidates in races they can win.
But the observations in the foregoing analysis are of country's entire legislatures. 
At that level, we cannot really see what going on within political parties, not really at all.
And if rising public gender egalitarianism coincides with, for example, greater success of green and left parties that are committed to equality, then the results just described may be the consequence of aggregation bias.
If it is the ideology of the parties elected to the legislature that actually drive women's descriptive representation, looking across all parties at once as we just did may generate mistaken conclusions.

The second problem is that there is ample theory and evidence across many fields of public opinion that the public responds to cues provided by elites.
This analysis does control for the cues presented to the public by the factors identified in the elite-led theory, the adoption of legislative gender quotas and the presence of electoral lists as well as the strength of feminist movements, and through including the lagged value of women's descriptive representation it also seeks to control for how women in office provide examples of their fitness to lead.
These remedies, though, are arguably somewhat indirect.
There remains the possibility that the associations underlying our findings are the consequence of the cues provided by the share of legislators who are women influencing gender egalitarian public opinion rather than the public's gender egalitarianism influencing the share of women elected to the legislature.
If so, the remedies we employed above are insufficient.

In the following sections, we address each of these two problems directly.
First, to ensure that our findings are not clouded by aggregation bias, we collect and analyze data at the party level.
And second, to confirm that we have adequately addressed the potential for reverse causation, we then explicitly incorporate the effect of the extent of women's descriptive representation achieved in an election on the public's subsequent gender egalitarianism.


## Addressing Aggregation: Explaining Descriptive Representation Within Parties {.unnumbered}

Because the theories outlined in Chapter 2 work through the actions of parties, they are most appropriately tested using data measured at the party level.
We compiled data on women's share of each each party's legislative representation after each election, drawing on the datasets employed in @Weeks2023 and @Adams2023 and supplementing with national sources.
The resulting data comprises over 1400 observations.

```{r m2}
if (!file.exists(file.path(descrep_path,  "data", "pfem_results.rda"))) {
  load(file = file.path(descrep_path, "data", "by_party.rda"))
  
  by_party2 <- by_party %>% 
    group_by(party) %>% 
    mutate(seats = ifelse(is.na(seats), 0, seats),
           pfem_lag = ifelse(lag(seats) == 0, 0, pfem_lag),
           ttt = 1) %>% 
    filter(!is.na(pfem_lag)) %>% 
    inner_join(by_country0 %>%
                 filter(!is.na(list) & !is.na(pge)) %>% 
                 group_by(country) %>% 
                 transmute(country,
                           year,
                           women_rep,
                           women_rep_lag = lag(women_rep),
                           women_rep_mean = mean(women_rep_lag, na.rm = TRUE),
                           women_rep_diff = women_rep_lag - women_rep_mean,
                           pge,
                           pge_se,
                           p10, p90,
                           pge_lag = lag(pge),      # from previous election
                           pge_se_lag = lag(pge_se),
                           pge_mean = mean(pge, na.rm = TRUE),
                           pge_mean_se = sqrt(sum(pge_se^2, na.rm = TRUE))/
                             length(pge),
                           pge_diff = pge - pge_mean,
                           pge_diff_se = sqrt(pge_se^2 + pge_mean_se^2)/2,
                           fmi_mean = mean(fmi, na.rm = TRUE),
                           fmi_diff = fmi - fmi_mean,
                           national_quota_mean = mean(national_quota),
                           national_quota_diff = national_quota -
                             national_quota_mean,
                           list,
                           list_mean = mean(list, na.rm = TRUE),
                           list_diff = list - list_mean,
                           gdppc,
                           gdppc_mean = mean(gdppc, na.rm = TRUE),
                           gdppc_diff = gdppc - gdppc_mean),
               by = c("countryname" = "country", "year")) %>% 
    arrange(countryname, party, year) %>% 
    mutate(country = countryname,
           cyear = paste0(countryname, year),
           pfem_mean = mean(pfem, na.rm = TRUE),
           pfem_diff = pfem - pfem_mean,
           party_quota_mean = mean(party_quota, na.rm = TRUE),
           party_quota_diff = party_quota - party_quota_mean,
           quota = pmax(national_quota, party_quota),
           quota_mean = mean(quota, na.rm = TRUE),
           quota_diff = quota - quota_mean) %>% 
    ungroup() %>% 
    group_by(country, year) %>% 
    filter(!is.na(pfem) & !is.na(pge_lag))
  
  bf_pfem <- bf(pfem ~
                  me(pge_diff, pge_diff_se) +
                  me(pge_mean, pge_mean_se) +
                  fmi_diff +
                  fmi_mean +
                  quota_diff +
                  quota_mean +
                  list_diff +
                  list_mean +
                  left +
                  green +
                  center +
                  extreme_right +
                  pfem_lag +
                  (1|p|party) + (1|cy|cyear) + (1|c|country) + (1|t|year))
  
  m2_pfem_b <- brm(formula = bf_pfem,
                   data = by_party2,
                   backend = "cmdstanr",
                   control=list(adapt_delta = 0.99, 
                                max_treedepth = 15),
                   warmup = 500,
                   iter = 1000,
                   chains = 4,
                   cores = 4,
                   seed = 324)
  
  m2pf_data <- m2_pfem_b$data
  
  m2pf_data_2sd <- m2pf_data %>% 
    select(-`pfem`,
           -country, -year, -cyear, -party, -ends_with("_se")) %>% 
    summarize(across(everything(), by2sd)) %>% 
    pivot_longer(everything()) %>% 
    mutate(`.variable` = case_when(name == "pge_mean" ~ 
                                     "bsp_mepge_meanpge_mean_se",
                                   name == "pge_diff" ~
                                     "bsp_mepge_diffpge_diff_se",
                                   TRUE ~ paste0("b_", name)),
           var_names = c("Feminist Movement Index, Difference",
                         "Feminist Movement Index, Country Mean",
                         "Gender Quota, Difference",
                         "Gender Quota, Party Mean",
                         "Electoral List, Difference",
                         "Electoral List, Country Mean",
                         "Left Party",
                         "Green Party",
                         "Center Party",
                         "Extreme Right Party",
                         "Lagged Women's Share of Party Seats",
                         "Public Gender Egalitarianism, Difference",
                         "Public Gender Egalitarianism, Country Mean"),
           sd2 = ifelse(str_detect(.variable, "list_|fmi_diff|_lag"),
                        1,
                        value))
  
  coef_data0_m2 <- m2_pfem_b %>% 
    tidybayes::gather_draws(`bs?p?_.*`, regex = TRUE) %>% 
    filter(!`.variable`=="b_Intercept") %>% 
    left_join(m2pf_data_2sd, by = join_by(.variable))
  
  save(by_party2,
       file = file.path(descrep_path, "data",  "by_party2.rda"))
  save(m2pf_data, m2pf_data_2sd, coef_data0_m2, cyp_summary,
       file = file.path(descrep_path, "data",  "pfem_results.rda"))
} else {
  load(file = file.path(descrep_path, "data",  "by_party2.rda"))
  load(file = file.path(descrep_path, "data",  "pfem_results.rda"))
}
```

```{r partymap, fig.cap="Party-Election Observations in OECD Democracies \\label{partymap}", fig.height = 6, fig.width = 7.5}
parties <- world1 %>% 
  mutate(country = countrycode::countrycode(admin,
                                            "country.name",
                                            "country.name"),
         oecd = country %in% oecd_countries) %>% 
  filter(!admin == "Antarctica") %>% 
  left_join(m2pf_data %>% 
              group_by(country) %>% 
              count(name = "party_elections"),
            by = c("country"))

party_map <- ggplot() +
  geom_sf(data = world1) +
  geom_sf(data = parties,
          aes(fill = party_elections)) +
  coord_sf(crs = sf::st_crs("ESRI:53035")) +
  scale_fill_distiller(na.value = "white", 
                       palette = "Greys",
                       direction = 1) +
  theme(legend.position="none")

party_bar <- m2pf_data %>%
  group_by(country) %>% 
  count(name = "party_elections") %>%
  ggplot(aes(forcats::fct_reorder(country, party_elections, .desc = TRUE), 
             party_elections)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  theme(axis.title.x = element_blank(),
        axis.text.x  = element_text(angle = 90, vjust = .45, hjust = .95),
        axis.title.y = element_text(size = 9),
        plot.title = element_text(hjust = 0.5, size = 11)) +
  ylab("Party-Elections Observed")

party_map +
  party_bar +
  plot_layout(ncol = 1, widths = c(1, 1), heights = c(5, 2))
```

Figure&nbsp;\ref{partymap} shows the distribution of these party-election observations across countries.
Spain, Denmark, and the Netherlands have the most party-elections observed, while Israel and Latvia have the fewest.
The United States, although observed over many more elections than other countries as shown in Figure&nbsp\ref{electionsmap}, has only two parties represented in Congress, so it is no longer an outlier in terms of the number of observations when party-elections are the unit of analysis.

Because some political parties in a country have many elected women among those who sit in the legislature and others have few or none, the bivariate relationship between national public opinion on gender equality and women's descriptive representation within parties is fairly noisy, as Figure&nbsp;\ref{pfemplot} reveals.
Compared to when both concepts are measured at the country-year level, as in Figure&nbsp;\ref{wrplot}, the correlation falls by nearly half.
The points in this plot are faded by the parties' share of the legislature: the largest parties appear darkest and the smallest are very light.
(Parties whose delegations in the lower house of the national legislature are mostly women tend to be smaller, but otherwise there is little apparent relationship between party size and descriptive representation; across all observations, the bivariate correlation $R$ is just `r with(by_party2, cor(pfem, seat_percent)) %>% round(2)`.)
In any event, the much looser relationship between public opinion and descriptive representation seen here reinforces the concern that difference between the units observed in the analysis first presented and those at which the theories are thought to operate may influence our conclusions.

```{r pfemplot, fig.cap="Public Gender Egalitarianism and Women’s Share of Party Legislative Seats in OECD Democracies \\label{pfemplot}", fig.height = 9, fig.width = 7.5}
party_pge <- rio::import(file.path(descrep_path, "data", "party_pge.rda"))

pfem_cor <- map(party_pge,
                ~ with(.x, cor(pge, pfem,
                               use = "pairwise.complete.obs"))) %>% 
  unlist() %>% 
  mean() %>% 
  round(2) %>% 
  sprintf("%.2f", .) %>% 
  paste0("R = ", .)

pfem_label <- tibble(pge = 30, pfem = 100, seat_percent=100, label = pfem_cor)

ggplot(by_party2,
       aes(x = pge,
           y = pfem)) +
  geom_segment(aes(x = p10, xend = p90,
                   y = pfem, yend = pfem),
               na.rm = TRUE,
               alpha = .1) +
  geom_point(aes(alpha = seat_percent/100)) +
  geom_smooth(method = 'lm', se = FALSE) +
  theme_bw() +
  theme(legend.position="none",
        axis.text  = element_text(size=10),
        axis.title = element_text(size=12)) +
  scale_x_continuous(limits=c(25, 100),
                     breaks=seq(25, 100, by = 25)) +
  labs(x = "Public Gender Egalitarianism", y = "Women's Share of Party Legislative Seats") +
  geom_label(data = pfem_label, aes(label = label)) +
  plot_annotation(caption = "Notes: Whiskers describe 80% credible intervals.")
```

Indeed, previous research finds that little explains women's share of party legislative delegations.
@Weeks2023 [, 434], for example, examined women's representation in 175 parties across 30 European countries over an average of 3.5 elections.
The only variable to emerge from that paper's analysis of this party-level evidence was the lagged value of women's share of the legislature: in countries where a greater share of women was elected to the last legislature, parties are predicted to elect a greater share of women to the next one.
There was no evidence that countries' electoral systems had systematic effects, nor did a variety of party characteristics.
Even the hypothesis that national legislative quotas lead to a greater share of women legislators within parties found no support.

Regardless, as in the previous analysis, we include information about the country-mean and the difference from this mean for the feminist movement index created by @Forester2022 and the presence of a party list in the electoral system drawn from the the Democratic Electoral Systems Around the World dataset dataset [@Bormann2022].
We refine our measure of gender quotas to incorporate information regarding parties' voluntary quotas.
The gender quota variables for a party are based highest quota applicable to a party's legislative candidates, whether set by national legislation or by its own internal rules.
The "within-between" specification of the model here employs the mean value of this variable for each party and the difference from that mean.
The model also accounts for the complex hierarchical structure of these data. As our party-election observations are cross-classified in the histories of parties and in country-elections, both being of those levels nested in countries, and country-elections are nested in years, the model also includes varying intercepts for each party, country-election, country, and year.

One factor supported in prior scholarship is party ideology.
@Caul1999 [, 88] finds that, at three time points in the 1970s and 1980s, among parties in eleven European democracies and the United States, those with greener ideologies and those more to the left had larger shares of women among their elected legislators [see also, e.g., @OBrien2018].
Among more recent work, @OBrien2018 examines parties in a dozen rich democracies from 1980 to 2013.
That research finds that socialist and social democratic parties on the left---and especially green parties---elected more women than the liberal and agrarian parties of the center, the Christian democratic and conservative parties of the right, or the nationalist parties of the extreme right.
We therefore also control for parties' memberships in these ideological groupings.

```{r m2plot, fig.cap="Predicting Women's Share of Parties' Legislative Seats in OECD Democracies \\label{m2plot}", fig.height = 9, fig.width = 7.5}
ordered_pfem <- c("Public Gender Egalitarianism, Difference",
                  "Public Gender Egalitarianism, Country Mean", 
                  "Feminist Movement Index, Difference",
                  "Feminist Movement Index, Country Mean",
                  "Gender Quota, Difference",
                  "Gender Quota, Party Mean",
                  "Electoral List, Difference",
                  "Electoral List, Country Mean", 
                  "Seat Share, Difference",
                  "Seat Share, Party Mean",
                  "Left Party",
                  "Green Party",
                  "Center Party",
                  "Extreme Right Party",
                  "Lagged Women's Share of Party Seats") %>% 
  rev()

coef_data_m2pf <- coef_data0_m2 %>% 
  mutate(std_coef = round(.value * sd2, 1),
         term = factor(var_names, levels = ordered_pfem)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  left_join(m2pf_data_2sd, ., by = join_by(.variable))

coef_data_m2pf_total <- coef_data0_m2 %>% 
  group_by(.chain, .iteration, .draw) %>% 
  mutate(alpha = mean(ifelse(name=="pfem_lag", .value, NA_real_),
                      na.rm = TRUE)) %>% 
  ungroup() %>% 
  group_by(.variable) %>% 
  mutate(std_coef0 = round(.value * sd2, 1),
         std_coef = round(std_coef0/(1 - alpha), 1),
         term = factor(var_names, levels = ordered)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  right_join(m2pf_data_2sd, by = join_by(.variable))

coef_plot_m2pf <- coef_data0_m2 %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered_pfem)) %>% 
  filter(!str_detect(var_names, "Lagged")) %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  theme_light() +
  xlab("Standardized Coefficients") +
  ylab(NULL) 

lag_plot_m2pf <- coef_data0_m2 %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered)) %>% 
  filter(str_detect(var_names, "Lagged")) %>% 
  mutate(term = "Lagged Women's Share of Party Seats") %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  theme_light() +
  theme(strip.text.x = element_blank(),
        strip.background = element_blank()) +
  xlab("Unstandardized Coefficient") +
  ylab(NULL) 

coef_plot_m2pf + lag_plot_m2pf +
  plot_layout(ncol = 1, widths = c(1, 1), heights = c(13, 1)) +
  plot_annotation(caption = "Notes: Dots indicate posterior medians; whiskers describe 80% credible\nintervals; shading depicts the posterior probability distribution.")
```

Figure&nbsp;\ref{m2plot} shows the results of this model of women's share of seats within parties' legislative delegations.
They reinforce several of the conclusions reached when looking only at the legislature as a whole.
There is consistent divergence, estimated to be `r get_coef("list_mean", coef_data_m2pf, type = "std_coef")` percentage points (with an 80% credible interval of `r get_coef("list_mean", coef_data_m2pf, type = "ci")` points), between countries with and without party lists in their electoral systems.
Given the dynamics of descriptive representation, the long-run estimate of this divergence is `r get_coef("list_mean", coef_data_m2pf_total)`.
The few episodes of electoral-system differences over time in our data, however, again fail to support the conclusion that changes in the presence of lists have immediate effects.
Gender quotas, both parties' mean de facto thresholds (by an estimated `r get_coef("quota_mean", coef_data_m2pf, type = "std_coef")` points with an 80% credible interval of `r get_coef("quota_mean", coef_data_m2pf, type = "ci")` over two standard deviations of that variable) and the differences from these means over time (`r get_coef("quota_diff", coef_data_m2pf, type = "std_coef")` points; 80% c.i. `r get_coef("quota_diff", coef_data_m2pf, type = "ci")`), are found to increase the share of women in parties' legislative delegations.
The estimates grow to `r get_coef("quota_mean", coef_data_m2pf_total)` points and `r get_coef("quota_diff", coef_data_m2pf_total)` points, respectively, over time as current values of descriptive representation influence future values.
Intriguingly, this model of parties shows somewhat stronger evidence for the hypothesis that stronger feminist movements are more successful in gaining descriptive representation for women than the country-level model.
Although countries with stronger average movement strength do not differ significantly from countries with weaker average movement strength---this estimate is `r get_coef("fmi_mean", coef_data_m2pf)` points---a one-point increase on the three-point scale of the Feminist Movement Index yields an immediate increase of `r get_coef("fmi_diff", coef_data_m2pf)` percentage points in women's share of parties' seats, growing to `r get_coef("fmi_diff", coef_data_m2pf_total)` points over time.

In line with previous findings, the posterior probability distributions for the variables representing green and left parties are large and positive.
Compared to in right-wing parties, women's share of elected representatives is `r get_coef("green", coef_data_m2pf)` points higher in green parties and `r get_coef("left", coef_data_m2pf)` points higher in parties of the left.
Women's shares of parliamentary delegations of parties of the ideological center were found to be  `r get_coef("center", coef_data_m2pf)` points larger as well, but extreme right parties are no different from other parties of the right.

Most importantly for present purposes, training our focus on parties within elections and taking into account party ideology do not change our findings with regard to public opinion.
Here, too, there is strong support for the theory suggesting more gender egalitarian public opinion causes more women's descriptive representation.
Consider first the cross-country findings.
Parties in a country where public opinion is a standard deviation above the sample mean elect `r get_coef("pge_mean", coef_data_m2pf)` points more women representatives within their delegations than those in a country where public opinion is a standard deviation below.
And over time _within_ a country, a two-standard deviation increase in public gender egalitarianism is found to yield on average a `r get_coef("pge_diff", coef_data_m2pf)` point increase in the extent to which parties send women to the legislature.
Taking the dynamics into account, the estimated effect of country-mean differences grows to `r get_coef("pge_mean", coef_data_m2pf_total)` and that for over-time differences from these means to `r get_coef("pge_diff", coef_data_m2pf_total)` points.
The conclusions reached in our analysis of entire legislative elections are not an artifact of aggregation; if anything, analyzing the more theoretically relevant unit of party-elections provides even stronger evidence of public opinion's importance to women gaining descriptive representation.


## Addressing Reverse Causation: Incorporating Representation's Effects on Opinion {.unnumbered}

As mentioned above, the other concern with our analysis of elections across the rich democracies is the potential that its results are driven by reverse causation.
This problem arises where what we have theorized as the causal relationship, here that more gender egalitarian public opinion causes more women's descriptive representation, can also be theorized as running in the opposite direction.
Often public opinion is influenced by elite cues, and one such cue may be how many women are in the national legislature.
If opinion is the consequence of elite cues, then, despite the model's inclusion of controls for some of these cues as well as for the previous share of women in the legislature, the association observed between public opinion and descriptive representation that underlies our conclusions may not evince opinion's effect on representation.
It may instead reflect causation that runs only in the opposite direction, from representation to opinion.

That when the public sees more women in office it adopts more gender egalitarian opinions is indeed plausible.
It has in fact been found in previous research to have empirical support.
@Alexander2012 employs a seemingly unrelated regression model and aggregate data of a cross-section of twenty-five countries included in two waves of the World Values Survey.
It finds that increases in women's presence in parliaments over the decade between WVS waves predicted greater belief that men are not better political leaders than women in the second wave, even when beliefs in the first wave were taken into account.
@Kim2023 examines four waves of the WVS in 87 countries for a total of 187 observed country-years.
In multilevel models of individuals with varying intercepts for country-years and countries, that work finds strong evidence that women's descriptive representation influences attitudes toward women in politics.

The larger evidentiary base in @Kim2023 provides more confidence than the very small sample used in @Alexander2012.
In terms of modeling strategy, though, @Kim2023 represents the converse of the analyses presented in this chapter so far: it looks only at one side of this potentially reciprocal relationship and concludes that all of the association observed to remain after controlling for other observed variables flows on this side.
As @Kim2023 [, 17] itself notes, "Perhaps the biggest concern is that preexisting egalitarianism skews results," a concern the study could not address in its model due to the limited observations available over time in the WVS data.
The combination of building a single model that explicitly incorporates both hypotheses, as in @Alexander2012, and estimating its parameters with a large dataset, as in @Kim2023, would be the "ideal" approach to disentangling these relationships [@Kim2023, 22 at endnote 21].

Fortunately, the dataset used in this chapter, built around the extensive PGE dataset on gender egalitarian public opinion, allows us to proceed along exactly these lines.
We return to examining country-elections to match the level at which both public opinion and descriptive representation can be measured.
As before, we estimate the within-between specification of a Bayesian multilevel model with varying intercepts for each country and year.
What is new is that we model the potentially reciprocal relationships using a pair of equations, one for women's descriptive representation and one for public gender egalitarianism, within a multivariate simultaneous equations model.
That means that gender egalitarianism and descriptive representation are each used to predict the other and that the varying intercepts for each country and year are correlated across the two equations.

```{r wrsem_b}
if (!file.exists(file.path(descrep_path, "data", "wrsem_results.rda"))) {
  by_country2 <- by_country %>% 
    group_by(country) %>% 
    transmute(year,
              women_rep,
              women_rep_lag, # from previous election
              women_rep_mean = mean(women_rep_lag, na.rm = TRUE),
              women_rep_diff = women_rep_lag - women_rep_mean,
              pge,
              pge_se,
              pge_lag,      # from previous election
              pge_se_lag,
              pge_mean = mean(pge, na.rm = TRUE),
              pge_mean_se = sqrt(sum(pge_se^2, na.rm = TRUE))/
                length(pge),
              pge_diff = pge - pge_mean,
              pge_diff_se = sqrt(pge_se^2 + pge_mean_se^2)/2,
              fmi,
              fmi_mean = mean(fmi, na.rm = TRUE),
              fmi_diff = fmi - fmi_mean,
              national_quota,
              national_quota_mean = mean(national_quota),
              national_quota_diff = national_quota - national_quota_mean,
              list,
              list_mean = mean(list, na.rm = TRUE),
              list_diff = list - list_mean,
              gdppc,
              gdppc_mean = mean(gdppc, na.rm = TRUE),
              gdppc_diff = gdppc - gdppc_mean) %>% 
    ungroup()
  
  bf_wr <- bf(women_rep ~ 
                me(pge_diff, pge_diff_se) +
                me(pge_mean, pge_mean_se) +
                fmi_diff +
                fmi_mean +
                national_quota_diff +
                national_quota_mean + 
                list_diff +
                list_mean +
                women_rep_lag +
                (1|c|country) + (1|t|year))
  
  bf_pge <- bf(pge ~ 
                 women_rep_diff +
                 women_rep_mean +
                 fmi_diff +
                 fmi_mean +
                 gdppc_diff +
                 gdppc_mean +
                 national_quota_diff +
                 national_quota_mean + 
                 list_diff +
                 list_mean +
                 pge_lag +
                 (1|c|country) + (1|t|year))
  
  m3_wrsem_b <- brm(formula = bf_wr + 
                      bf_pge + 
                      set_rescor(TRUE),  
                    data = by_country2,
                    backend = "cmdstanr",
                    control=list(adapt_delta = 0.99, 
                                 max_treedepth = 12),
                    warmup = 500, 
                    iter = 1000, 
                    chains = 4, 
                    cores = 4,
                    seed = 324)
  
  m3_data <- m3_wrsem_b$data
  
  m3_data_2sd <- m3_data %>% 
    select(pge_diff,
           pge_mean,
           fmi_diff,
           fmi_mean,
           national_quota_diff,
           national_quota_mean,
           list_diff,
           list_mean, 
           women_rep_lag) %>% 
    summarize(across(everything(), by2sd)) %>% 
    pivot_longer(everything()) %>% 
    mutate(`.variable` = case_when(name == "pge_mean" ~ 
                                     "bsp_womenrep_mepge_meanpge_mean_se",
                                   name == "pge_diff" ~
                                     "bsp_womenrep_mepge_diffpge_diff_se",
                                   TRUE ~ paste0("b_womenrep_", name)),
           var_names = c("Public Gender Egalitarianism, Difference",
                         "Public Gender Egalitarianism, Mean",
                         "Feminist Movement Index, Difference",
                         "Feminist Movement Index, Mean",
                         "National Quota, Difference",
                         "National Quota, Mean",
                         "Electoral List, Difference",
                         "Electoral List, Mean",
                         "Lagged Descriptive Representation"
           ),
           sd2 = ifelse(str_detect(.variable, "list_|_lag"),
                        1,
                        value),
           dv = "Women's Descriptive Representation") %>% 
    bind_rows(m3_data %>% 
                select(women_rep_diff,
                       women_rep_mean,
                       fmi_diff,
                       fmi_mean,
                       gdppc_diff,
                       gdppc_mean,
                       national_quota_diff,
                       national_quota_mean,
                       list_diff,
                       list_mean,
                       pge_lag) %>% 
                summarize(across(everything(), by2sd)) %>% 
                pivot_longer(everything()) %>% 
                mutate(`.variable` = paste0("b_pge_", name),
                       var_names = c("Descriptive Representation, Difference",
                                     "Descriptive Representation, Mean",
                                     "Feminist Movement Index, Difference",
                                     "Feminist Movement Index, Mean",
                                     "GDP per Capita, Difference",
                                     "GDP per Capita, Mean",
                                     "National Quota, Difference",
                                     "National Quota, Mean",
                                     "Electoral List, Difference",
                                     "Electoral List, Mean",
                                     "Lagged Public Gender Egalitarianism"
                       ),
                       sd2 = ifelse(str_detect(.variable, "list_|_lag"),
                                    1,
                                    value),
                       dv = "Public Gender Egalitarianism")) %>% 
    mutate(dv = factor(dv, levels = c("Women's Descriptive Representation",
                                      "Public Gender Egalitarianism")))
  
  coef_data0_wrsem <- m3_wrsem_b %>% 
    as_draws_df() %>% 
    tidybayes::gather_draws(`bs?p?_.*`, regex = TRUE) %>% 
    filter(!str_detect(`.variable`, "_Intercept")) %>% 
    left_join(m3_data_2sd, by = join_by(.variable))
  
  save(m3_data, m3_data_2sd, coef_data0_wrsem, 
       file = file.path(descrep_path,
                        "data",
                        "wrsem_results.rda"))
} else {
  load(file = file.path(descrep_path, "data", "wrsem_results.rda"))
}
```

```{r m3plot, fig.cap="Predicting Women's Parliamentary Representation in OECD Democratic Elections \\label{m3plot}", fig.height = 9, fig.width = 7.5}
ordered_wrsem <- c("Public Gender Egalitarianism, Difference",
                   "Public Gender Egalitarianism, Mean", 
                   "Descriptive Representation, Difference",
                   "Descriptive Representation, Mean",
                   "Feminist Movement Index, Difference",
                   "Feminist Movement Index, Mean",
                   "National Quota, Difference",
                   "National Quota, Mean",
                   "Electoral List, Difference",
                   "Electoral List, Mean", 
                   "GDP per Capita, Difference",
                   "GDP per Capita, Mean",
                   "Lagged Descriptive Representation",
                   "Lagged Public Gender Egalitarianism") %>% 
  rev()

coef_data_wrsem <- coef_data0_wrsem %>% 
  mutate(std_coef = round(.value * sd2, 2),
         term = factor(var_names, levels = ordered_wrsem)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  left_join(m3_data_2sd, ., by = join_by(.variable))

coef_data_wrsem_total <- coef_data0_wrsem %>%  
  group_by(.chain, .iteration, .draw) %>% 
  mutate(alpha_wr = mean(ifelse(name=="women_rep_lag", .value, NA_real_),
                         na.rm = TRUE),
         alpha_pge = mean(ifelse(name=="pge_lag", .value, NA_real_),
                          na.rm = TRUE)) %>% 
  ungroup() %>% 
  group_by(.variable) %>% 
  mutate(std_coef0 = round(.value * sd2, 1),
         std_coef = if_else(dv == "Women's Descriptive Representation",
                            round(std_coef0/(1 - alpha_wr), 1),
                            round(std_coef0/(1 - alpha_pge), 1)),
         term = factor(var_names, levels = ordered_wrsem)) %>%
  ggdist::median_qi(std_coef, .width = c(.8, .9)) %>%
  mutate(ci = paste0(round(.lower, 1), " to ", round(.upper, 1))) %>%
  right_join(m3_data_2sd, by = join_by(.variable))

coef_plots_wrsem <- coef_data0_wrsem %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered_wrsem)) %>% 
  filter(!str_detect(var_names, "Lagged")) %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  facet_grid(~ dv) +
  coord_cartesian(xlim = c(-6, 6)) +
  theme_light() +
  theme(strip.text.x = element_text(size = 10, color = "black"),
        strip.background = element_rect(fill = "white", colour = "white")) +
  xlab("Standardized Coefficients") +
  ylab(NULL)

lag_plots_wrsem <- coef_data0_wrsem %>% 
  mutate(std_coef = .value * sd2,
         term = factor(var_names, levels = ordered_wrsem)) %>% 
  filter(str_detect(var_names, "Lagged")) %>% 
  mutate(term = "Lagged Response Variable") %>% 
  ggplot(aes(y = term, x = std_coef)) +
  ggdist::stat_halfeye(.width = .8,
                       fill = "grey60",
                       linewidth = 2) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  facet_grid(~ dv) +
  theme_light() +
  theme(strip.text.x = element_blank(),
        strip.background = element_blank()) +
  xlab("Unstandardized Coefficients") +
  ylab(NULL) 

coef_plots_wrsem + lag_plots_wrsem +
  plot_layout(ncol = 1, widths = c(1, 1), heights = c(9, 1)) +
  plot_annotation(caption = "Notes: Dots indicate posterior medians; whiskers describe 80% credible\nintervals; shading depicts the posterior probability distribution.")
```

Figure&nbsp;\ref{m3plot} presents the results, with the equation predicting women's descriptive representation in the left-hand panels and the equation predicting public gender egalitarianism in the right-hand panels.
Both the conclusion reached earlier in this chapter that opinion affects representation and the finding of @Kim2023 that representation affects opinion are supported, reinforcing our confidence in each.
The evidence for the relationship we are most interested in here, from gender egalitarian public opinion to women's descriptive representation in national legislatures, is if anything strengthened by controlling for the potential for reverse causation.
The posterior probability that increasing PGE over time within a country leads to an increasing percentage of women legislators, conditional on these data and this model, is `r {{coef_data0_wrsem %>% filter(name == "pge_diff" & .value > 0) %>% nrow()}/20} %>% round()`%.
The magnitude of this estimated effect is substantial: a two-standard-deviation increase in within-country PGE before one election is estimated to yield an increase of `r get_coef("pge_diff", coef_data_wrsem)` percentage points in women's descriptive representation in that election and `r get_coef("pge_diff", coef_data_wrsem_total)` percentage points over time.
This is similar to the estimated consequences for descriptive representation of the adoption of a national quota requiring 20% of each party's candidates to be women.


## Conclusions {.unnumbered}

The role of gender egalitarian public opinion in the election of women to national office has been a cornerstone of theory on descriptive representation.
Evidence, though, has been thin, particularly in comparison to that marshaled in support of arguments regarding the part of elites, women's organizations and feminist activists working within political parties, in pushing toward gender equality in positions of power.
Moreover, some of these latter theories as well as other understandings of democratic politics, suggest that the public may not actually influence these outcomes at all.
Instead, these accounts would have it, the public is an onlooker to the events that matter and its opinions are a consequence, rather than a cause, of what happens.
Elite negotiations such as those between activists and party gatekeepers determine the extent of women's descriptive representation, and public attitudes shift in response.

This chapter presents strong evidence that the public does in fact matter to the extent to which women gain office. 
When public opinion towards gender roles in the public sphere of politics and the workplace shift toward egalitarianism, more women are elected.
And, although these public attitudes do respond to the extent to which women hold positions of power, the importance of the public is still clear when taking this reverse causation is also considered.
Taking public gender egalitarianism into account is a valuable complement to the elite-led theory of women's descriptive representation.
In the next chapter, we examine whether public opinion also shapes women's substantive representation, the adoption of policies of gender equality.
